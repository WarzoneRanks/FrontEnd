[{"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Home.js":"1","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/components/Header.js":"2","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Stats.js":"3","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/App.js":"4","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/NotFound.js":"5","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/index.js":"6","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/reportWebVitals.js":"7","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/components/Matches.js":"8","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/About.js":"9","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Search.js":"10","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Favorites.js":"11","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/UserMatch.js":"12","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Famous.js":"13","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/index.js":"14","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/components/Header.js":"15","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Search.js":"16","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/NotFound.js":"17","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Famous.js":"18","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/components/Matches.js":"19","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Favorites.js":"20","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Home.js":"21","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/UserMatch.js":"22","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Stats.js":"23","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/reportWebVitals.js":"24","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/App.js":"25","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/NewHome.js":"26","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/About.js":"27","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Recent.js":"28","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Social.js":"29"},{"size":3629,"mtime":1617603378935,"results":"30","hashOfConfig":"31"},{"size":1987,"mtime":1617908904366,"results":"32","hashOfConfig":"31"},{"size":21379,"mtime":1617844873200,"results":"33","hashOfConfig":"31"},{"size":1301,"mtime":1617905293784,"results":"34","hashOfConfig":"31"},{"size":606,"mtime":1617431982908,"results":"35","hashOfConfig":"31"},{"size":500,"mtime":1610661386990,"results":"36","hashOfConfig":"31"},{"size":362,"mtime":1610661386991,"results":"37","hashOfConfig":"31"},{"size":11510,"mtime":1618967404494,"results":"38","hashOfConfig":"31"},{"size":3033,"mtime":1617908475982,"results":"39","hashOfConfig":"31"},{"size":3234,"mtime":1617603184501,"results":"40","hashOfConfig":"31"},{"size":3371,"mtime":1617909626198,"results":"41","hashOfConfig":"31"},{"size":17608,"mtime":1618967413194,"results":"42","hashOfConfig":"31"},{"size":5751,"mtime":1617907471414,"results":"43","hashOfConfig":"31"},{"size":500,"mtime":1618967923167,"results":"44","hashOfConfig":"45"},{"size":10326,"mtime":1619678080658,"results":"46","hashOfConfig":"45"},{"size":3234,"mtime":1618967923168,"results":"47","hashOfConfig":"45"},{"size":606,"mtime":1618967923168,"results":"48","hashOfConfig":"45"},{"size":5751,"mtime":1618967923168,"results":"49","hashOfConfig":"45"},{"size":12055,"mtime":1619672283730,"results":"50","hashOfConfig":"45"},{"size":3359,"mtime":1619648610369,"results":"51","hashOfConfig":"45"},{"size":3416,"mtime":1619710101876,"results":"52","hashOfConfig":"45"},{"size":18098,"mtime":1619672289257,"results":"53","hashOfConfig":"45"},{"size":32507,"mtime":1619710141417,"results":"54","hashOfConfig":"45"},{"size":362,"mtime":1618967923169,"results":"55","hashOfConfig":"45"},{"size":2100,"mtime":1619710863626,"results":"56","hashOfConfig":"45"},{"size":26427,"mtime":1619672278691,"results":"57","hashOfConfig":"45"},{"size":3033,"mtime":1618967923167,"results":"58","hashOfConfig":"45"},{"size":3033,"mtime":1619669361882,"results":"59","hashOfConfig":"45"},{"size":2106,"mtime":1619711104246,"results":"60","hashOfConfig":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"1ay4gpx",{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1vidf9l",{"filePath":"103","messages":"104","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"137"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"102"},"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Home.js",["146","147","148"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\n\nimport Stats from './Stats';\nimport Favorites from './Favorites';\n\nimport {\n    Link,\n    Redirect\n} from 'react-router-dom';\n\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          platform: '',\n          redirect: null\n        };\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            username: '',\n            platform: 'xbl',\n            redirect: null\n        });\n        if (localStorage.getItem(\"favoriteUser\") != null) {\n            let cachedUser = JSON.parse(localStorage.getItem(\"favoriteUser\"));\n            console.log(`/stats/${cachedUser.platform}/${cachedUser.username.replace(\"#\", \"%23\")}`);\n            this.setState({ redirect: `/stats/${cachedUser.platform}/${cachedUser.username.replace(\"#\", \"%23\")}` });\n        }\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    redirectToPage(e) {\n        e.preventDefault();\n        console.log(`/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}`);\n        this.setState({ redirect: `/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}` });\n    }\n\n    setUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    } \n\n    setPlatform(e) {\n        this.setState({\n            platform: e.target.value\n        });\n    } \n\n\n    render() {\n        if (this.state.redirect !== null) {\n            return <Redirect to={this.state.redirect} />\n        }\n        return (\n            <DocumentTitle className=\"page\" title='Warzone Stats - Home'>\n            <div className=\"page home\" id=\"page\">\n                <Container className=\"searchBoxContainer\">\n                    <h1 className=\"pageTitle\">Find a Player</h1>\n                    <div class=\"searchBox\">\n                        <Form onSubmit={this.redirectToPage.bind(this)}>\n                            <Form.Row>\n                                    <Form.Group as={Col} xs={12} s={12} md={8} lg={8} controlId=\"formGridUsername\">\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control onChange={ this.setUsername.bind(this) } value={this.state.username} type=\"user\" placeholder=\"Enter username\" />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridPlatform\">\n                                        <Form.Label>Platform</Form.Label>\n                                        <Form.Control as=\"select\" onChange={ this.setPlatform.bind(this) } defaultValue=\"xbl\">\n                                            <option value=\"xbl\">Xbox</option>\n                                            <option value=\"psn\">Playstation</option>\n                                            <option value=\"battle\">Battle.net</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                            </Form.Row>\n                            <div className=\"formButtonSearch\">\n                                <Button variant=\"primary\" type=\"search\">\n                                    Search\n                                </Button>\n                            </div>\n                        </Form>\n                    </div>\n                </Container>\n                <Favorites fromPage=\"Home\" />\n            </div>\n            </DocumentTitle>\n        );\n    };\n}\n\nexport default Home;",["149","150"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/components/Header.js",["151","152","153","154","155","156","157"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Stats.js",["158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\nimport Matches from '../components/Matches';\n\nimport {\n    Link\n} from 'react-router-dom';\n\n\nclass Stats extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          platform: null,\n          username: null,\n          stats: {\n              level: null,\n              kd: null,\n              wins: null,\n              gamesPlayed: null,\n              weekly: {\n                kd: null,\n                kills: null,\n                killsPerGame: null\n              }\n          },\n          matches: null,\n          isLoading: true,\n          error: null,\n          isHome: null,\n          homeText: \" Mark as my profile\",\n          isFav: null,\n          favText: \" Add to favorites\",\n          minutesLeft: 10,\n          secondsLeft: 0\n        };\n    }\n\n    updateStats() {\n        if (localStorage.getItem(\"favoriteUser\") != null) {\n          let cachedUser = JSON.parse(localStorage.getItem(\"favoriteUser\"));\n          if (this.props.match.params.username == cachedUser.username && this.props.match.params.platform == cachedUser.platform) {\n            this.setState({isHome: true, \"homeText\": \"\"});\n            console.log('is home');\n          } else {\n            this.setState({isHome: false, \"homeText\": \" Mark as my profile\"});\n            console.log('is not home');\n          }\n        }\n\n        if (localStorage.getItem(\"favorites\") != null) {\n          let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n          let username = this.props.match.params.username;\n          let platform = this.props.match.params.platform;\n          console.log(username, platform);\n          let isFav = false;\n          cachedUsers.favorites.map(function(o) {\n            console.log(o.username, o.platform);\n            if (o.username == username && o.platform == platform) {\n              isFav = true;\n            } \n          });\n          if (isFav) {\n            this.setState({isFav: true, \"favText\": \"\"});\n            console.log('is fav');\n          } else {\n            this.setState({isFav: false, \"favText\": \" Add to favorites\"});\n            console.log('is not fav');\n          }\n        }\n        fetch(\"https://app.warzoneranks.app/ping\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.updateStatsPush();\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            let APIerror = \"We are currently experiencing some API issues, please try again soon..\";\n            this.setState({\n                error: APIerror,\n                isLoading: false\n            });\n          }\n        )\n    }\n\n\n\n    updateStatsPush() {\n        function millisToMinutesAndSeconds(millis) {\n          var minutes = Math.floor(millis / 60000);\n          var seconds = ((millis % 60000) / 1000).toFixed(0);\n          let timeLeft = {\n            minutes: minutes,\n            seconds: seconds\n          };\n          return timeLeft;\n        }\n        if (localStorage.getItem(`${this.props.match.params.platform}/${this.props.match.params.username}/matches`) != null) {\n          console.log(\"Match Cache Exists\");\n          var cachedStats = JSON.parse(localStorage.getItem(`${this.props.match.params.platform}/${this.props.match.params.username}/matches`));\n          if (Date.now() - cachedStats.timeGrabbed < 600000) {\n            let difference = Date.now() - cachedStats.timeGrabbed;\n            let timeLeft = millisToMinutesAndSeconds(600000 - difference);\n            this.setState({\n              minutesLeft: timeLeft.minutes,\n              secondsLeft: timeLeft.seconds\n            });\n          } else {\n            this.setState({\n              minutesLeft: 10,\n              secondsLeft: 0\n            });\n\n          }\n        }\n        if (localStorage.getItem(`${this.props.match.params.platform}/${this.props.match.params.username}`) != null) {\n          console.log(\"Match Cache Exists\");\n          var cachedStats = JSON.parse(localStorage.getItem(`${this.props.match.params.platform}/${this.props.match.params.username}`));\n          if (Date.now() - cachedStats.timeGrabbed < 600000) {\n            console.log(\"Using cache\");\n            console.log(cachedStats.timeGrabbed);\n            this.setState({\n              stats: cachedStats,\n              error: null,\n              isLoading: false\n            });\n          } else {\n            console.log(\"Fetching new because time\");\n            fetch(`https://app.warzoneranks.app/stats/${this.props.match.params.platform}/${this.props.match.params.username}`)\n            .then(res => res.json())\n            .then(\n              (result) => {\n                if (!result.error) {\n                    var stats = {\n                        timeGrabbed: Date.now(),\n                        level: result.data.level,\n                        kd: result.data.kd,\n                        wins: result.data.wins,\n                        gamesPlayed: result.data.gamesPlayed,\n                        killsPerGame: result.data.killsPerGame,\n                        weekly: {\n                          kd: result.data.weekly.kd,\n                          kills: result.data.weekly.kills,\n                          killsPerGame: result.data.weekly.killsPerGame\n                        },\n                        ranking: {\n                          kd: {\n                            rank: result.data.ranking.kd.rank,\n                            class: result.data.ranking.kd.class,\n                            percentage: result.data.ranking.kd.percentage\n                          },\n                          wins: {\n                            rank: result.data.ranking.wins.rank,\n                            class: result.data.ranking.wins.class,\n                            percentage: result.data.ranking.wins.percentage\n                          },\n                          killsPerGame: {\n                            rank: result.data.ranking.killsPerGame.rank,\n                            class: result.data.ranking.killsPerGame.class,\n                            percentage: result.data.ranking.killsPerGame.percentage\n                          }\n                        }\n                    }\n                    this.setState({\n                      stats: stats,\n                      error: null,\n                      isLoading: false\n                    });\n                    localStorage.setItem(`${this.props.match.params.platform}/${this.props.match.params.username}`, JSON.stringify(stats));\n                } else {\n                    this.setState({\n                      error: result.msg,\n                      isLoading: false\n                    });\n                }\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              (error) => {\n                this.setState({\n                  error,\n                  isLoading: false\n                });\n                console.log(error);\n              }\n            )\n          }\n        } else {\n          console.log(\"Fetching new because doesn't exist\");\n          fetch(`https://app.warzoneranks.app/stats/${this.props.match.params.platform}/${this.props.match.params.username}`)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              if (!result.error) {\n                  var stats = {\n                      timeGrabbed: Date.now(),\n                      level: result.data.level,\n                      kd: result.data.kd,\n                      wins: result.data.wins,\n                      gamesPlayed: result.data.gamesPlayed,\n                      killsPerGame: result.data.killsPerGame,\n                      weekly: {\n                        kd: result.data.weekly.kd,\n                        kills: result.data.weekly.kills,\n                        killsPerGame: result.data.weekly.killsPerGame\n                      },\n                      ranking: {\n                        kd: {\n                          rank: result.data.ranking.kd.rank,\n                          class: result.data.ranking.kd.class,\n                          percentage: result.data.ranking.kd.percentage\n                        },\n                        wins: {\n                          rank: result.data.ranking.wins.rank,\n                          class: result.data.ranking.wins.class,\n                          percentage: result.data.ranking.wins.percentage\n                        },\n                        killsPerGame: {\n                          rank: result.data.ranking.killsPerGame.rank,\n                          class: result.data.ranking.killsPerGame.class,\n                          percentage: result.data.ranking.killsPerGame.percentage\n                        }\n                      }\n                  }\n                  this.setState({\n                    stats: stats,\n                    error: null,\n                    isLoading: false\n                  });\n                  localStorage.setItem(`${this.props.match.params.platform}/${this.props.match.params.username}`, JSON.stringify(stats));\n              } else {\n                  this.setState({\n                    error: result.msg,\n                    isLoading: false\n                  });\n              }\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                error,\n                isLoading: false\n              });\n              console.log(error);\n            }\n          )\n        }\n        \n\n        /*fetch(`https://app.warzoneranks.app/stats/${this.props.match.params.platform}/${this.props.match.params.username}/matches`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            if (!result.error) {\n                console.log(result.data);\n                this.setState({\n                  matches: result.data,\n                  error: null,\n                  isLoading: false\n                });\n            } else {\n                this.setState({\n                  error: result.msg,\n                  isLoading: false\n                });\n            }\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              error,\n              isLoading: false\n            });\n            console.log(error);\n          }\n        )*/\n    }\n\n    componentWillMount() {\n        this.setState({\n            platform: this.props.match.params.platform,\n            username: this.props.match.params.username\n        })\n        this.updateStats();\n        this.refreshTimer = setInterval(() => {\n          const { secondsLeft, minutesLeft } = this.state\n          if (secondsLeft > 0) {\n            this.setState(({ secondsLeft }) => ({\n              secondsLeft: secondsLeft - 1\n            }))\n          }\n          if (secondsLeft === 0) {\n            if (minutesLeft === 0) {\n              this.updateStats();\n            } else {\n              this.setState(({ minutesLeft }) => ({\n                minutesLeft: minutesLeft - 1,\n                secondsLeft: 59\n              }))\n            }\n          }\n        }, 1000);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.platform !== this.props.match.params.platform || this.state.username !== this.props.match.params.username ) {\n          this.setState({ \n            platform: this.props.match.params.platform,\n            username: this.props.match.params.username,\n            isLoading: true\n          });\n          this.updateStats();\n        }\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n\n    render() {\n        let makeHomeUser = () => {\n          if (this.state.isHome) {\n            localStorage.removeItem('favoriteUser');\n            this.setState({isHome: false, homeText: \" Mark as my profile\"});\n          } else {\n            let favoriteUser = {\n              username: this.state.username,\n              platform: this.state.platform\n            };\n            localStorage.setItem('favoriteUser', JSON.stringify(favoriteUser));\n            this.setState({isHome: true, homeText: \"\"});\n          \n          }\n        }\n\n        let makeFavoriteUser = () => {\n          let username = this.state.username;\n          let platform = this.state.platform;\n          if (this.state.isFav) {\n            let counter = -1;\n            let index;\n            let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n            let workingArray = cachedUsers.favorites;\n            workingArray.map(function(o) {\n              counter = counter + 1;\n              if (o.username == username && o.platform == platform) {\n                index = counter;\n              } \n            });\n            workingArray.splice(index, 1);\n            if (workingArray.length != 0) {\n              let newJson = {\n                favorites: workingArray\n              }\n              localStorage.setItem(\"favorites\", JSON.stringify(newJson));\n            } else {\n              localStorage.removeItem(\"favorites\");\n            }\n            this.setState({isFav: false, favText: \" Add to favorites\"});\n          } else {\n            if (localStorage.getItem(\"favorites\") != null) {\n              let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n              let workingArray = cachedUsers.favorites;\n              let favoriteUser = {\n                username: username,\n                platform: platform\n              };\n              workingArray.push(favoriteUser);\n              let newJson = {\n                favorites: workingArray\n              }\n              localStorage.setItem(\"favorites\", JSON.stringify(newJson));\n            } else {\n              let workingArray = [];\n              let favoriteUser = {\n                username: username,\n                platform: platform\n              };\n              workingArray.push(favoriteUser);\n              let newJson = {\n                favorites: workingArray\n              }\n              localStorage.setItem(\"favorites\", JSON.stringify(newJson));\n            }\n            this.setState({isFav: true, favText: \"\"});\n          }\n        }\n        const { platform, username, error, stats, matches, isLoading, minutesLeft, secondsLeft} = this.state;\n\n\n\n        if (error != null) {\n            return (\n                <DocumentTitle className=\"page\" title=\"Warzone Stats - Stats\">\n                <div className=\"page home\" id=\"page\">\n                    <div className=\"pageError\">\n                      <p>An error has occured..</p>\n                      <p>{error}</p>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        } else if (isLoading) {\n            return (\n                <DocumentTitle className=\"page\" title='Warzone Stats - Stats'>\n                <div className=\"page home center m-t-20\" id=\"page\">\n                    <FontAwesome \n                    name='spinner-third'\n                    spin\n                    size='2x'\n                    className=\"m-t-20\"\n                    style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                    <div className=\"pageError\">\n                      <p>Working on pulling your data...</p>\n                      <p>Load time are longer than normal currently as we rank stats live</p>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        } else {\n            let pageName = `Warzone Stats - ${username}`;\n            return (\n                <DocumentTitle className=\"page\" title={pageName}>\n                <div className=\"page home\" id=\"page\">\n                    <h1 className=\"username\"><span className=\"level\">{stats.level}</span> {username.replace(\"%23\", \"#\")} \n                      <div className=\"refreshTimer\">\n                        <p><i className=\"far fa-clock\"></i> {minutesLeft}:{ secondsLeft < 10 ? `0${ secondsLeft }` : secondsLeft }</p>\n                      </div>\n                    </h1>\n                    <div className=\"userOptions\">\n                      <span onClick={makeHomeUser} className={`makeHomeB fav-${this.state.isHome}`}><i className=\"fal fa-home\"></i>{this.state.homeText}</span>\n                      <span onClick={makeFavoriteUser} className={`makeFav favo-${this.state.isFav}`}><i className=\"far fa-star\"></i>{this.state.favText}</span>\n                    </div>\n                    \n                    <div className=\"statsDiv container-fluid\">\n                      <h1 className=\"sub\">Lifetime</h1>\n                      <Row>\n                        <div className=\"col-12 col-md-4 col-lg-4 marginBottom10\">\n                          <div className={`stat stat-bigger m-h-130 ${stats.ranking.kd.class}`}>\n                            <h1 className=\"mid statTitle\">k/d</h1>\n                            <h1 className={`mid statBox ${stats.ranking.kd.class}-text`}>{stats.kd}</h1>\n                            <h1 className=\"mid statRanking\">{stats.ranking.kd.rank}</h1>\n                            <div className=\"bottom\">{stats.ranking.kd.percentage}</div>\n                          </div>\n                        </div>\n                        <div className=\"col-6 col-md-4 col-lg-4\">\n                          <div className={`stat stat-bigger m-h-130 ${stats.ranking.wins.class}`}>\n                            <h1 className=\"mid statTitle\">wins</h1>\n                            <h1 className={`mid statBox ${stats.ranking.wins.class}-text`}>{stats.wins}</h1>\n                            <h1 className=\"mid statRanking\">{stats.ranking.wins.rank}</h1>\n                            <div className=\"bottom\">{stats.ranking.wins.percentage}</div>\n                          </div>\n                        </div>\n                        <div className=\"col-6 col-md-4 col-lg-4\">\n                          <div className={`stat stat-bigger m-h-130 ${stats.ranking.killsPerGame.class}`}>\n                            <h1 className=\"mid statTitle\">kills/game</h1>\n                            <h1 className={`mid statBox ${stats.ranking.killsPerGame.class}-text`}>{stats.killsPerGame}</h1>\n                            <h1 className=\"mid statRanking\">{stats.ranking.killsPerGame.rank}</h1>\n                            <div className=\"bottom\">{stats.ranking.killsPerGame.percentage}</div>\n                          </div>\n                        </div>\n                      </Row>\n                      <h1 className=\"sub pad\">Weekly</h1>\n                      <Row>\n                        <Col>\n                          <div className=\"stat m-small gray\">\n                            <div className=\"bottom\">k/d</div>\n                            <h1 className=\"mid\"><span>{stats.weekly.kd}{stats.weekly.kd > stats.kd && <FontAwesome \n                          name='long-arrow-up'\n                          style={{ color: '#27ae60', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}{stats.weekly.kd < stats.kd && <FontAwesome \n                            name='long-arrow-down'\n                            style={{ color: '#c0392b', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}</span></h1>\n                          </div>\n                        </Col> \n                        <Col>\n                          <div className=\"stat m-small gray\">\n                            <div className=\"bottom\">kills</div>\n                            <h1 className=\"mid\"><span>{stats.weekly.kills}</span></h1>\n                          </div>\n                        </Col>\n                        <Col>\n                          <div className=\"stat m-small gray\">\n                            <div className=\"bottom\">kills/game</div>\n                            <h1 className=\"mid\"><span>{stats.weekly.killsPerGame}{stats.weekly.killsPerGame > stats.killsPerGame && <FontAwesome \n                          name='long-arrow-up'\n                          style={{ color: '#27ae60', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}{stats.weekly.killsPerGame < stats.killsPerGame && <FontAwesome \n                            name='long-arrow-down'\n                            style={{ color: '#c0392b', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}</span></h1>\n                          </div>\n                        </Col>\n                      </Row>\n                      <h1 className=\"sub pad\">Matches</h1>\n                      \n                      <Matches platform={platform} username={username}></Matches>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        }\n    };\n}\n\nexport default Stats;",["172","173"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/App.js",["174","175","176"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/NotFound.js",["177","178","179","180","181"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nimport {\n    Link\n} from 'react-router-dom';\n\n\nclass NotFound extends Component {\n\n    componentDidMount() {\n\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n\n    render() {\n        return (\n            <DocumentTitle className=\"page\" title='Warzone Stats - 404'>\n            <div className=\"page home\" id=\"page\">\n                <h1>404 - Not Found</h1>\n            </div>\n            </DocumentTitle>\n        );\n    };\n}\n\nexport default NotFound;","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/index.js",[],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/reportWebVitals.js",[],["182","183"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/components/Matches.js",["184","185"],"import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nexport default class Matches extends React.Component {\n\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            platform: null,\n            username: null,\n            matches: null,\n            isLoading: true,\n            error: null\n        }\n    }\n\n    updateStats() {\n        fetch(\"https://app.warzoneranks.app/ping\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.updateStatsPush();\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            let APIerror = \"We are currently experiencing some API issues, please try again soon..\";\n            this.setState({\n                error: APIerror,\n                isLoading: false\n            });\n          }\n        )\n    }\n\n    updateStatsPush() {\n        if (localStorage.getItem(`${this.props.platform}/${this.props.username}/matches`) != null) {\n            console.log(\"Match Cache Exists\");\n            var cachedStats = JSON.parse(localStorage.getItem(`${this.props.platform}/${this.props.username}/matches`));\n            if (Date.now() - cachedStats.timeGrabbed < 600000) {\n                this.setState({\n                    matches: cachedStats.data,\n                    error: null,\n                    isLoading: false\n                });\n            } else {\n                console.log(\"Match Fetching new because time\");\n                fetch(`https://app.warzoneranks.app/stats/${this.props.platform}/${this.props.username}/matches`)\n                .then(res => res.json())\n                .then(\n                (result) => {\n                    if (!result.error) {\n                        //console.log(result.data);\n                        var results = {\n                            data: result.data,\n                            timeGrabbed: Date.now(),\n                        }\n                        this.setState({\n                            matches: result.data,\n                            error: null,\n                            isLoading: false\n                        });\n                        localStorage.setItem(`${this.props.platform}/${this.props.username}/matches`, JSON.stringify(results));\n                    } else {\n                        this.setState({\n                        error: result.msg,\n                        isLoading: false\n                        });\n                    }\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                    error,\n                    isLoading: false\n                    });\n                    console.log(error);\n                }\n                )\n            }\n        } else {\n            console.log(\"Match Fetching new because doesn't exist\");\n            fetch(`https://app.warzoneranks.app/stats/${this.props.platform}/${this.props.username}/matches`)\n                .then(res => res.json())\n                .then(\n                (result) => {\n                    if (!result.error) {\n                        //console.log(result.data);\n                        var results = {\n                            data: result.data,\n                            timeGrabbed: Date.now(),\n                        }\n                        this.setState({\n                            matches: result.data,\n                            error: null,\n                            isLoading: false\n                        });\n                        localStorage.setItem(`${this.props.platform}/${this.props.username}/matches`, JSON.stringify(results));\n                    } else {\n                        this.setState({\n                        error: result.msg,\n                        isLoading: false\n                        });\n                    }\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                    error,\n                    isLoading: false\n                    });\n                    console.log(error);\n                }\n                )\n        }\n    }\n\n    componentWillMount() {\n        this.setState({\n            platform: this.props.platform,\n            username: this.props.username\n        })\n        this.updateStats();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.platform !== this.props.platform || this.state.username !== this.props.username) {\n            this.setState({ \n              platform: this.props.platform,\n              username: this.props.username,\n              isLoading: true\n            });\n            this.updateStats();\n          }\n    }\n    \n\n    renderRows() {\n        function convertGameName(name) {\n            let newName = name;\n            switch(name) {\n                case \"br_brquads\":\n                    newName = \"BR Quads\";\n                break;\n                case \"br_brtrios\":\n                    newName = \"BR Trios\";\n                break;\n                case \"br_brduos\":\n                    newName = \"BR Duos\";\n                break;\n                case \"br_brsolo\":\n                    newName = \"BR Solo\";\n                break;\n                case \"br_brz_brquads\":\n                    newName = \"BR Quads\";\n                break;\n                case \"br_brz_brtrios\":\n                    newName = \"BR Trios\";\n                break;\n                case \"br_brz_brduos\":\n                    newName = \"BR Duos\";\n                break;\n                case \"br_brz_brsolo\":\n                    newName = \"BR Solo\";\n                break;\n                case \"br_dmz_plndtrios\":\n                    newName = \"Plunder Trios\";\n                break;\n                case \"br_kingslayer_kingsltrios\":\n                    newName = \"KS Trios\"\n                break;\n                default:\n            }\n            return newName;\n        }\n\n        function convertDate(epoch) {\n            var d = new Date(0); \n            d.setUTCSeconds(epoch);\n            let minutes = d.getMinutes();\n            if (minutes.toString().length == 1) minutes = \"0\" + minutes.toString();\n            var dateString = d.getMonth() + 1 + \"/\" + d.getDate() + \"/\" + d.getFullYear() + \" \" + d.getHours() + \":\" + minutes;\n            return dateString;\n\n        }\n\n        function isWin(placement) {\n            if (placement == 1) {\n                return \"rank win\";\n            } else {\n                return \"rank\";\n            }\n\n        }\n\n        return  this.state.matches.map(function(o) {\n            if (o.mode.includes(\"br_br\")) {\n                let rank = o.ranking.rank;\n                let rClass = o.ranking.class;\n                if (localStorage.getItem(`/match/${o.matchID}`) != null) {\n                    let localMatch = JSON.parse(localStorage.getItem(`/match/${o.matchID}`));\n                    //console.log(localMatch);\n                    rank = localMatch.ranking.rank;\n                    rClass = localMatch.ranking.class;\n                }\n                return (\n                    <Link to={`/match/${o.playerStats.teamPlacement}/${o.matchID}`}>\n                        <div className=\"stat match gray\" id={\"match-\" + o.matchID}>\n                            <div className=\"title\">{convertGameName(o.mode)} <span className=\"date\">{convertDate(o.utcStartSeconds)}</span></div>\n                            <div className={isWin(o.playerStats.teamPlacement)}>{o.playerStats.teamPlacement}</div>\n                            <div className={`lobbyRank ${rClass}`}>{rank}</div>\n                            <div className=\"matchStats\">\n                                <div class=\"matchStat\">\n                                    <h1>Kills</h1>\n                                    <p>{o.playerStats.kills}</p>\n                                </div>\n                                <div class=\"matchStat\">\n                                    <h1>Damage</h1>\n                                    <p>{o.playerStats.damageDone}</p>\n                                </div>\n                                <div class=\"matchStat extraStat\">\n                                    <h1>Score</h1>\n                                    <p>{o.playerStats.score}</p>\n                                </div>\n                            </div>\n                            <div className=\"openPage\">\n                            <i class=\"fas fa-external-link\"></i> More Stats\n                            </div>\n                        </div>\n                    </Link>\n                )\n            } else {\n                return (\n                    <div className=\"stat match gray alt-match\" id={\"match-\" + o.matchID}>\n                        <div className=\"title\">{convertGameName(o.mode)} <span className=\"date\">{convertDate(o.utcStartSeconds)}</span></div>\n                        <div className={isWin(o.playerStats.teamPlacement)}>{o.playerStats.teamPlacement}</div>\n                        <div className={`lobbyRank gray`}>NOT RANKED</div>\n                        <div className=\"matchStats\">\n                            <div class=\"matchStat\">\n                                <h1>Kills</h1>\n                                <p>{o.playerStats.kills}</p>\n                            </div>\n                            <div class=\"matchStat\">\n                                <h1>Damage</h1>\n                                <p>{o.playerStats.damageDone}</p>\n                            </div>\n                            <div class=\"matchStat extraStat\">\n                                <h1>Score</h1>\n                                <p>{o.playerStats.score}</p>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        });\n    }\n\n    render() {\n        if (this.state.error != null) {\n            return (     \n                <div className=\"page home\" id=\"page\">\n                    <div className=\"pageError\">\n                      <p>An error has occured..</p>\n                      <p>{this.state.error}</p>\n                    </div>\n                </div>\n            );\n        } else if (this.state.isLoading) {\n            return (\n                <div className=\"page home center m-t-20\" id=\"page\">\n                    <FontAwesome \n                    name='spinner-third'\n                    spin\n                    size='2x'\n                    className=\"m-t-20\"\n                    style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                    <div className=\"pageError\">\n                      <p>Working on pulling your data...</p>\n                      <p>Load time are longer than normal currently as we rank stats live</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"matches\">\n                {this.renderRows()}\n                </div>\n            );\n        }\n    }\n}\n","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/About.js",["186","187","188","189","190","191","192"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport BigWhiteLogo from '../assets/images/Logo-Big-White.svg';\n\nimport {\n    Link\n} from 'react-router-dom';\n\n\nclass NotFound extends Component {\n\n    componentDidMount() {\n\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n\n    render() {\n        return (\n            <DocumentTitle className=\"page\" title='Warzone Stats - About'>\n            <div className=\"page about\" id=\"page\">\n                <div className=\"aboutImage\">\n                    <img src={BigWhiteLogo}></img>\n                </div>\n                <div className=\"aboutPageContainer\">\n                    <h2>Who we are</h2>\n                    <p>Hi there! My name is Parker and I'm a highschool student who enjoys development and is a huge warzone fan. I've played warzone almost since the start and have really enjoyed the game. I was a huge advocate for SBMM Warzone and the hard work they did. It allowed for there to be an equal playing field for streamers and players to see the kinds of lobbies everyone was being put in and it allowed for players to be able to see how their k/d, wins, etc stacks up against others.</p>\n                    \n                    <h2>What we want to do</h2>\n                    <p>The whole point of this site is just to allow players to be able to use the functionality that SBMM Warzone had (apart from lobby rankings, read below), this includes ranking of stats like k/d, wins, etc, along with allowing a simple and basic interface to see match history that many other sites don't offer as they can be cluttered and hard to see the basic stats you are looking for. SBMM Warzone has been shut down by Activision due to a C&D put out by activision lawyers who had privacy concerns. You can read more about their story on their <a className=\"aboutLink\" target=\"_blank\" href=\"https://sbmmwarzone.com\">website</a>.</p>\n                    \n                    <h2>Why are there no lobby rankings yet?</h2>\n                    <p>Unfortunately Activision has decided to limit their API to now allow for non-partners to view the lifetime k/d's of players from their match history. You must know what platform the user is on and cannot do a global search like you could do before. This is most likely due to the fact that they don't want players data to be shared, however, this is not a problem after the update they put out several months ago which made players data private by default.</p>\n\n                    <h2>Will there ever be lobby ranking?</h2>\n                    <p>The hope is that SBMM Warzone can get in touch with Activision and sort out things so that their site can come back online, in the mean time though I will be spending time attempting to create a way for lobbies to be ranked with the limited API usage that is allowed now.</p>\n                </div>\n            </div>\n            </DocumentTitle>\n        );\n    };\n}\n\nexport default NotFound;",["193","194"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Search.js",["195","196"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport Favorites from './Favorites';\n\nimport {\n    Link,\n    Redirect\n} from 'react-router-dom';\n\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          platform: '',\n          redirect: null\n        };\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            username: '',\n            platform: 'xbl',\n            redirect: null\n        });\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    redirectToPage(e) {\n        e.preventDefault();\n        console.log(`/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}`);\n        this.setState({ redirect: `/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}` });\n    }\n\n    setUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    } \n\n    setPlatform(e) {\n        this.setState({\n            platform: e.target.value\n        });\n    } \n\n\n    render() {\n        if (this.state.redirect !== null) {\n            return <Redirect to={this.state.redirect} />\n        }\n        return (\n            <DocumentTitle className=\"page\" title='Warzone Stats - Home'>\n            <div className=\"page home\" id=\"page\">\n                <Container className=\"searchBoxContainer\">\n                    <h1 className=\"pageTitle\">Find a Player</h1>\n                    <div class=\"searchBox\">\n                        <Form onSubmit={this.redirectToPage.bind(this)}>\n                            <Form.Row>\n                                    <Form.Group as={Col} xs={12} s={12} md={8} lg={8} controlId=\"formGridUsername\">\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control onChange={ this.setUsername.bind(this) } value={this.state.username} type=\"user\" placeholder=\"Enter username\" />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridPlatform\">\n                                        <Form.Label>Platform</Form.Label>\n                                        <Form.Control as=\"select\" onChange={ this.setPlatform.bind(this) } defaultValue=\"xbl\">\n                                            <option value=\"xbl\">Xbox</option>\n                                            <option value=\"psn\">Playstation</option>\n                                            <option value=\"battle\">Battle.net</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                            </Form.Row>\n                            <div className=\"formButtonSearch\">\n                                <Button variant=\"primary\" type=\"search\">\n                                    Search\n                                </Button>\n                            </div>\n                        </Form>\n                    </div>\n                </Container>\n                <Favorites fromPage=\"Search\" />\n            </div>\n            </DocumentTitle>\n        );\n    };\n}\n\nexport default Home;","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Favorites.js",["197","198","199","200","201","202","203","204","205","206"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\n\nimport Stats from './Stats';\n\nimport {\n    Link,\n    Redirect\n} from 'react-router-dom';\n\n\nclass Favorites extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          platform: '',\n          favorites: null,\n          redirect: null\n        };\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            username: '',\n            platform: 'xbl',\n            favorites: null,\n            redirect: null\n        });\n        if (localStorage.getItem(\"favorites\") != null) {\n            let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n            console.log(cachedUsers);\n            this.setState({\n                favorites: cachedUsers.favorites\n            });\n        }\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    redirectToPage() {\n        console.log(`/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}`);\n        this.setState({ redirect: `/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}` });\n    }\n\n    setUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    } \n\n    setPlatform(e) {\n        this.setState({\n            platform: e.target.value\n        });\n    } \n\n    renderFavorites() {\n        console.log(this.state.favorites);\n        function getPlatformIcon(platform) {\n            switch(platform) {\n                case \"xbl\": \n                    return \"xbox\";\n                    break;\n                case \"psn\": \n                    return \"playstation\";\n                    break;\n                case \"battle\": \n                    return \"battle-net\";\n                    break;\n            }\n        }\n\n        \n\n        if (this.state.favorites != null) {\n            return  this.state.favorites.map(function(o) {\n                return (\n                    <div className=\"favorite\">\n                        <p><i className={`fab fa-${getPlatformIcon(o.platform)}`}></i> {o.username.replace(\"%23\", \"#\")}</p>\n                        <Link to={`/stats/${o.platform}/${o.username}`}><button className=\"btn btn-success\">Visit Profile</button></Link>\n                    </div>\n                )\n            });\n        } else {\n            return (\n                <div className=\"pageError\">\n                      <h3>You have no favorites!</h3>\n                      <p>Add some by clicking the <i className=\"far fa-star\"></i> next to a users profile</p>\n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        if (this.state.redirect !== null) {\n            return <Redirect to={this.state.redirect} />\n        }\n        let title = \"Favorites\";\n        if (this.props.fromPage != null) {\n            title = this.props.fromPage;\n        }\n        return (\n            <DocumentTitle className=\"page\" title={`Warzone Stats - ${title}`}>\n            <div className=\"page home\" id=\"page\">\n                <h1 className=\"pageTitle aboutPageTitle\">Favorite Users</h1>\n                <div className=\"favorites\">\n                    {this.renderFavorites()}\n                </div>\n            </div>\n            </DocumentTitle>\n        );\n    };\n}\n\nexport default Favorites;","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/UserMatch.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\n\nimport {\n    Link\n} from 'react-router-dom';\n\n\nclass Match extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          matchID: null,\n          place: null,\n          isLoading: true,\n          error: null,\n          matchStats: null,\n          displayOption: 0\n        };\n    }\n\n    updateStats() {\n        \n        fetch(\"https://app.warzoneranks.app/ping\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.updateStatsPush();\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            let APIerror = \"We are currently experiencing some API issues, please try again soon..\";\n            this.setState({\n                error: APIerror,\n                isLoading: false\n            });\n          }\n        )\n    }\n\n\n\n    updateStatsPush() {\n        fetch(`https://app.warzoneranks.app/matches/fullMatch/${this.props.match.params.matchID}`)\n            .then(res => res.json())\n            .then(\n              (result) => {\n                if (!result.error) {\n                    let playersCounted = result.data.ranking.players;\n                    let accuracy = (playersCounted / 115) * 100;\n                    let newPlayers = result.data.allPlayers;\n                    let medianKD = Number.parseFloat(result.data.ranking.averageKD);\n                    let averageKD = Number.parseFloat(result.data.ranking.averageKD_avg);\n                    var matchStats = {\n                        allPlayers: newPlayers,\n                        timeGrabbed: Date.now(),\n                        mode: result.data.mode,\n                        start: result.data.startTime,\n                        ranking: {\n                            medianKD: medianKD.toFixed(2),\n                            averageKD: averageKD.toFixed(2),\n                            rank: result.data.ranking.rank,\n                            class: result.data.ranking.class,\n                            percentage: result.data.ranking.percentage,\n                            chart: result.data.ranking.kdChart,\n                            accuracy: accuracy.toFixed(0)\n                        }\n                    }\n              \n                    this.setState({\n                      matchStats: matchStats,\n                      error: null,\n                      isLoading: false\n                    });\n                    localStorage.setItem(`/match/${this.props.match.params.matchID}`, JSON.stringify(matchStats));\n                } else {\n                    this.setState({\n                      error: result.msg,\n                      isLoading: false\n                    });\n                }\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              (error) => {\n                this.setState({\n                  error,\n                  isLoading: false\n                });\n                console.log(error);\n              }\n            );\n\n    }\n\n    componentWillMount() {\n        this.setState({\n            matchID: this.props.match.params.matchID,\n            place: this.props.match.params.place\n        })\n        this.updateStats();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.matchID !== this.props.match.params.matchID) {\n          this.setState({ \n            matchID: this.props.match.params.matchID,\n            place: this.props.match.params.place,\n            isLoading: true\n          });\n          this.updateStats();\n        }\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    renderTeam() {\n        let isWin = (placement) => {\n            if (placement == 1) {\n                return \"place win\";\n            } else {\n                return \"place\";\n            }\n\n        }\n        let place = this.state.place;\n        return this.state.matchStats.allPlayers.map(function(p) {\n            if (p.metadata.placement.value == place) {\n                if (p.attributes.lifeTimeStats != null) {\n                    let headshot = (p.stats.headshots.value / p.stats.kills.value) * 100;\n                    if (Number.isNaN(headshot)) {\n                        headshot = 0.00;\n                    }\n                    return (\n                        <tr className=\"playerT\">\n                            <th className=\"playerName\"><div className={isWin(p.metadata.placement.value)}>{p.metadata.placement.value}</div> {p.metadata.platformUserHandle}</th>\n                            <th>{p.stats.kills.value}</th>\n                            <th>{p.attributes.lifeTimeStats.kdRatio}</th>\n                            <th>{p.stats.damageDone.value}</th>\n                            <th>{p.stats.deaths.value}</th>\n                            <th>{headshot.toFixed(2)}%</th>\n                        </tr>\n                    );\n                } else {\n                    let headshot = (p.stats.headshots.value / p.stats.kills.value) * 100;\n                    if (Number.isNaN(headshot)) {\n                        headshot = 0.00;\n                    }\n                    return (\n                        <tr className=\"playerT\">\n                            <th className=\"playerName\"><div className={isWin(p.metadata.placement.value)}>{p.metadata.placement.value}</div> {p.metadata.platformUserHandle}</th>\n                            <th>{p.stats.kills.value}</th>\n                            <th>{p.stats.kdRatio.displayValue} <span className=\"tag\"><i class=\"fad fa-hourglass\"></i></span></th>\n                            <th>{p.stats.damageDone.value}</th>\n                            <th>{p.stats.deaths.value}</th>\n                            <th>{headshot.toFixed(2)}%</th>\n                        </tr>\n                    );\n                }\n            }\n        });\n    }\n\n\n    renderPlayers() {\n        let isWin = (placement) => {\n            if (placement == 1) {\n                return \"place win\";\n            } else {\n                return \"place\";\n            }\n\n        }\n\n        return this.state.matchStats.allPlayers.map(function(p) {\n            if (p.attributes.lifeTimeStats != null) {\n                let headshot = (p.stats.headshots.value / p.stats.kills.value) * 100;\n                if (Number.isNaN(headshot)) {\n                    headshot = 0.00;\n                }\n                return (\n                    <tr className=\"playerT\">\n                        <th className=\"playerName\"><div className={isWin(p.metadata.placement.value)}>{p.metadata.placement.value}</div> {p.metadata.platformUserHandle}</th>\n                        <th>{p.stats.kills.value}</th>\n                        <th>{p.attributes.lifeTimeStats.kdRatio}</th>\n                        <th>{p.stats.damageDone.value}</th>\n                        <th>{p.stats.deaths.value}</th>\n                        <th>{headshot.toFixed(2)}%</th>\n                    </tr>\n                );\n            } else {\n                let headshot = (p.stats.headshots.value / p.stats.kills.value) * 100;\n                if (Number.isNaN(headshot)) {\n                    headshot = 0.00;\n                }\n                return (\n                    <tr className=\"playerT\">\n                        <th className=\"playerName\"><div className={isWin(p.metadata.placement.value)}>{p.metadata.placement.value}</div> {p.metadata.platformUserHandle}</th>\n                        <th>{p.stats.kills.value}</th>\n                        <th>{p.stats.kdRatio.displayValue} <span className=\"tag\"><i class=\"fad fa-hourglass\"></i></span></th>\n                        <th>{p.stats.damageDone.value}</th>\n                        <th>{p.stats.deaths.value}</th>\n                        <th>{headshot.toFixed(2)}%</th>\n                    </tr>\n                );\n            }\n        });\n    }\n\n    renderMatchStats() {\n        \n\n        if (this.state.displayOption == 0) {\n            return (\n                <div>\n                    <h1 className=\"sub pad\">YOUR TEAM</h1>\n                    <table className=\"playersTable\">\n                        <tr className=\"top\">\n                            <th>NAME</th>\n                            <th>KILLS</th>\n                            <th>K/D</th>\n                            <th>DMG</th>\n                            <th>DEATHS</th>\n                            <th>HEADSHOT %</th>\n                        </tr>\n                        {this.renderTeam()}\n\n                    </table>\n\n                    <h1 className=\"sub pad\">ALL PLAYERS</h1>\n                    <table className=\"playersTable\">\n                        <tr className=\"top\">\n                            <th>NAME</th>\n                            <th>KILLS</th>\n                            <th>K/D</th>\n                            <th>DMG</th>\n                            <th>DEATHS</th>\n                            <th>HEADSHOT %</th>\n                        </tr>\n                        {this.renderPlayers()}\n\n                    </table>\n\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <div className=\"pageError\">\n                      <p>Oops!</p>\n                      <p>Teams are coming soon!</p>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        const { matchID, error, isLoading, matchStats } = this.state;\n\n        let convertGameName = (name) => {\n            let newName = name;\n            switch(name) {\n                case \"br_brquads\":\n                    newName = \"BR Quads\";\n                break;\n                case \"br_brtrios\":\n                    newName = \"BR Trios\";\n                break;\n                case \"br_brduos\":\n                    newName = \"BR Duos\";\n                break;\n                case \"br_brsolo\":\n                    newName = \"BR Solo\";\n                break;\n                case \"br_brz_brquads\":\n                    newName = \"BR Quads\";\n                break;\n                case \"br_brz_brtrios\":\n                    newName = \"BR Trios\";\n                break;\n                case \"br_brz_brduos\":\n                    newName = \"BR Duos\";\n                break;\n                case \"br_brz_brsolo\":\n                    newName = \"BR Solo\";\n                break;\n                case \"br_dmz_plndtrios\":\n                    newName = \"Plunder Trios\";\n                break;\n                case \"br_kingslayer_kingsltrios\":\n                    newName = \"KS Trios\"\n                break;\n                default:\n            }\n            return newName;\n        }\n\n        let teamActive = \"\";\n        let playersActive = \"active\";\n\n        if (this.state.displayOption == 1) {\n            teamActive = \"active\";\n            playersActive = \"\";\n        } else {\n            teamActive = \"\";\n            playersActive = \"active\";\n        }\n\n        let showTeams = () => {\n            if (this.state.displayOption != 1) {\n                this.setState({\n                    displayOption: 1\n                });\n                teamActive = \"active\";\n                playersActive = \"\";\n            }\n        }\n\n        let showPlayers = () => {\n            if (this.state.displayOption != 0) {\n                this.setState({\n                    displayOption: 0\n                });\n                teamActive = \"\";\n                playersActive = \"active\";\n            }\n        }\n\n        let convertNumToDay = (num) => {\n            switch(num) {\n                case 0: \n                    return \"Sunday\";\n                    break;\n                case 1:\n                    return \"Monday\";\n                    break;\n                case 2:\n                    return \"Tuesday\";\n                    break;\n                case 3:\n                    return \"Wednesday\";\n                    break;\n                case 4: \n                    return \"Thursday\";\n                    break;\n                case 5:\n                    return \"Friday\";\n                    break;\n                case 6:\n                    return \"Saturday\";\n                    break;\n            }\n        }\n\n        let convertDate = (epoch) => {\n            var d = new Date(0); \n            var sec = epoch / 1000;\n            d.setUTCSeconds(sec);\n            let minutes = d.getMinutes();\n            if (minutes.toString().length == 1) minutes = \"0\" + minutes.toString();\n            var dateString = convertNumToDay(d.getDay()) + \" \" + (d.getMonth() + 1) + \"/\" + d.getDate() + \"/\" + d.getFullYear() + \" • \" + d.getHours() + \":\" + minutes;\n            return dateString;\n\n        }\n\n        let isWin = (placement) => {\n            if (placement == 1) {\n                return \"rank win\";\n            } else {\n                return \"rank\";\n            }\n\n        }\n\n        if (error != null) {\n            return (\n                <DocumentTitle className=\"page\" title=\"Warzone Stats - Stats\">\n                <div className=\"page home\" id=\"page\">\n                    <div className=\"pageError\">\n                      <p>An error has occured..</p>\n                      <p>{error}</p>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        } else if (isLoading) {\n            return (\n                <DocumentTitle className=\"page\" title='Warzone Stats - Stats'>\n                <div className=\"page home center m-t-20\" id=\"page\">\n                    <FontAwesome \n                    name='spinner-third'\n                    spin\n                    size='2x'\n                    className=\"m-t-20\"\n                    style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                    <div className=\"pageError\">\n                      <p>Working on pulling match data...</p>\n                      <p>Load time are longer than normal currently as we rank stats live</p>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        } else {\n            let pageName = `Warzone Stats - Match #${this.state.matchID}`;\n            return (\n                <DocumentTitle className=\"page\" title={pageName}>\n                <div className=\"page home\" id=\"page\">\n                    <h1 className=\"username\">{convertGameName(`${matchStats.mode}`)}</h1>\n                    <h1 className=\"date\">{convertDate(`${matchStats.start}`)}</h1>\n                    <div className=\"statsDiv container-fluid\">\n                      <Row>\n                        <div className=\"col-12 col-md-4 col-lg-4\">\n                          <div className={`stat matchDifficulty stat-bigger m-h-130 ${matchStats.ranking.class}`}>\n                            <h1 className=\"mid statTitle\">DIFFICULTY</h1>\n                            <h1 className=\"mid statRanking\">{matchStats.ranking.rank}</h1>\n                            <div className=\"mid statDif\"><div className={`percent ${matchStats.ranking.chart}`}></div></div>\n                            <div className=\"bottom\">{matchStats.ranking.percentage}</div>\n                          </div>\n                        </div>\n                        <div className=\"col-12 col-md-8 col-lg-8\">\n                            <div className=\"matchOptions\">\n                                <div onClick={showPlayers} className={`matchOption ${playersActive}`}>Players</div>\n                                <div onClick={showTeams} className={`matchOption ${teamActive}`}>Teams</div>\n                            </div>\n                            <Row>\n                                <div className=\"col-12 col-md-4 col-lg-4\">\n                                    <div className={`stat bigMatchStat m-h-130 gray`}>\n                                        <h1 className=\"mid statTitle\">MEDIAN K/D</h1>\n                                        <h1 className=\"mid statRanking\">{matchStats.ranking.medianKD}</h1>\n                                    </div>\n                                </div>\n                                <div className=\"col-12 col-md-4 col-lg-4\">\n                                    <div className={`stat bigMatchStat m-h-130 gray`}>\n                                        <h1 className=\"mid statTitle\">AVERAGE K/D</h1>\n                                        <h1 className=\"mid statRanking\">{matchStats.ranking.averageKD}</h1>\n                                    </div>\n                                </div>\n                                <div className=\"col-12 col-md-4 col-lg-4\">\n                                    <div className={`stat bigMatchStat m-h-130 gray`}>\n                                        <h1 className=\"mid statTitle\">ACCURACY</h1>\n                                        <h1 className=\"mid statRanking\">{matchStats.ranking.accuracy}%</h1>\n                                    </div>\n                                </div>\n                            </Row>\n                        </div>\n                        \n                      </Row>\n                      \n                      {this.renderMatchStats()}\n                      \n\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        }\n    };\n}\n\nexport default Match;","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEnd/src/pages/Famous.js",["231","232","233","234","235","236","237","238","239","240","241","242","243"],"import React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport BigWhiteLogo from '../assets/images/Logo-Big-White.svg';\n\nimport {\n    Link\n} from 'react-router-dom';\n\n\nexport default class Matches extends React.Component {\n\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            famousPlayers: null,\n            isLoading: true,\n            error: null\n        }\n    }\n\n    updateStats() {\n        fetch(\"https://app.warzoneranks.app/ping\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.updateStatsPush();\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            let APIerror = \"We are currently experiencing some API issues, please try again soon..\";\n            this.setState({\n                error: APIerror,\n                isLoading: false\n            });\n          }\n        )\n    }\n\n    updateStatsPush() {\n        fetch(`https://app.warzoneranks.app/stats/famous`)\n                .then(res => res.json())\n                .then(\n                (result) => {\n                    if (!result.error) {\n                        this.setState({\n                            famousPlayers: result.data,\n                            error: null,\n                            isLoading: false\n                        });\n                    } else {\n                        this.setState({\n                        error: result.msg,\n                        isLoading: false\n                        });\n                    }\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                    error,\n                    isLoading: false\n                    });\n                    console.log(error);\n                }\n            );\n    }\n\n    componentWillMount() {\n        this.updateStats();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.famousPlayers == null) {\n            this.setState({ \n                isLoading: true\n            });\n            this.updateStats();\n        }\n    }\n    \n\n    renderRows() {\n        function getPlatformIcon(platform) {\n            switch(platform) {\n                case \"xbl\": \n                    return \"xbox\";\n                    break;\n                case \"psn\": \n                    return \"playstation\";\n                    break;\n                case \"battle\": \n                    return \"battle-net\";\n                    break;\n            }\n        }\n        return  this.state.famousPlayers.map(function(o) {\n           return (\n               <div className=\"col-12 col-md-4 col-lg-4\">\n                <div className=\"famousPlayer\">\n                    <img src={o.picture}></img>\n                    <h1>{o.name}</h1>\n                    <p><i className={`fab fa-${getPlatformIcon(o.platform)}`}></i> {o.username.replace(\"%23\", \"#\").replace(\"%25\", \"#\")}</p>\n                    <div className=\"socials\">\n                        <a target=\"_blank\" href={`https://twitch.tv/${o.social.twitch}`}><i className=\"fab fa-twitch\"></i></a>\n                        <a target=\"_blank\" href={`https://twitter.com/${o.social.twitter}`}><i className=\"fab fa-twitter\"></i></a>\n                    </div>\n                    <Link to={`/stats/${o.platform}/${o.username}`}><button className=\"btn btn-success\">Visit Profile</button></Link>\n                </div>\n               </div>\n           )\n        });\n    }\n\n    render() {\n        if (this.state.error != null) {\n            return (     \n                <DocumentTitle className=\"page\" title='Warzone Stats - Famous Players'>\n                <div className=\"page home\" id=\"page\">\n                    <div className=\"pageError\">\n                      <p>An error has occured..</p>\n                      <p>{this.state.error}</p>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        } else if (this.state.isLoading) {\n            return (\n                <DocumentTitle className=\"page\" title='Warzone Stats - Famous Players'>\n                    <div className=\"page home center m-t-20\" id=\"page\">\n                        <FontAwesome \n                        name='spinner-third'\n                        spin\n                        size='2x'\n                        className=\"m-t-20\"\n                        style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                        <div className=\"pageError\">\n                        <p>Working on pulling your data...</p>\n                        <p>Load time are longer than normal currently as we rank stats live</p>\n                        </div>\n                    </div>\n                </DocumentTitle>\n            );\n        } else {\n            return (\n                <DocumentTitle className=\"page home\" title='Warzone Stats - Famous Players'>\n                    <div className=\"page home center m-t-20\" id=\"page\">\n                        <h1 className=\"pageTitle aboutPageTitle\">Famous Players</h1>\n                        <div className=\"famousPlayers row\">\n                            {this.renderRows()}\n                        </div>\n                    </div>\n                </DocumentTitle>\n            );\n        }\n    }\n}\n","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/index.js",[],["244","245"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/components/Header.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"import React, { Component } from 'react';\n\nimport { NavLink, Link, Redirect } from 'react-router-dom';\nimport { Container, Row, Col, Navbar, Nav, Form, FormControl, Button, InputGroup } from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\nimport toast from 'react-hot-toast';\n\nimport LogoSmall from '../assets/images/Logo-Small-White.svg';\nimport NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\n\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          platform: '',\n          redirect: null,\n          displaySearch: false,\n          displayHasHash: false,\n          displayNoHash: true,\n          searches: null\n        };\n    }\n\n    updateSearchHistory = () => {\n        if (localStorage.getItem(\"searches\") != null) {\n            let cachedUsers = JSON.parse(localStorage.getItem(\"searches\"));\n            this.setState({\n                searches: cachedUsers.searches\n            });\n        }\n        this.renderSearches();\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            username: '',\n            platform: 'xbl',\n            redirect: null\n        });\n        this.updateSearchHistory();\n        setInterval(this.updateSearchHistory, 1000);\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    redirectToPage(e) {\n        e.preventDefault();\n    }\n\n    handleInputFocus = () => {\n        if (this.state.username.length > 0) {\n            this.setState({ displaySearch: true });\n        }\n    };\n    \n    handleInputBlur = () => {\n        setTimeout(() => {\n            this.setState({ displaySearch: false });\n        }, 200)\n    };\n\n    clearHistory = () => {\n        console.log(\"Clearing search history\");\n        localStorage.removeItem(\"searches\");\n        this.setState({\n            searches: null\n        });\n        this.renderSearches();\n        toast.success('Cleared search history!');\n    }\n\n    setUsername(e) {\n        if (e.target.value.length > 0) {\n            this.setState({ displaySearch: true });\n        } else {\n            this.setState({ displaySearch: false });\n        }\n        this.setState({\n            username: e.target.value\n        });\n        if (e.target.value.includes(\"#\")) {\n            this.setState({\n                displayNoHash: false,\n                displayHasHash: true\n            });\n        } else {\n            this.setState({\n                displayNoHash: true,\n                displayHasHash: false\n            });\n        }\n    } \n\n    setPlatform(e) {\n        this.setState({\n            platform: e.target.value\n        });\n    } \n\n    renderSearches() {\n        function getPlatformIcon(platform) {\n            switch(platform) {\n                case \"xbl\": \n                    return \"xbox\";\n                    break;\n                case \"psn\": \n                    return \"playstation\";\n                    break;\n                case \"battle\": \n                    return \"battle-net\";\n                    break;\n            }\n        }\n\n\n        if (this.state.searches != null) {\n            return  this.state.searches.map((o) => {\n                if (o.username.includes(\"%23\")) {\n                    return(\n                        <Link className={`display-${this.state.displayHasHash}`} to={`/stats/${o.platform}/${o.username.replace(\"#\", \"%23\")}`}>\n                            <div className=\"searchOption\">\n                                <h1><i className={`fab fa-${getPlatformIcon(o.platform)}`}></i> Search for <span className=\"searchTerm\">{o.username.replace(\"%23\", \"#\")}</span></h1>\n                            </div>\n                        </Link>\n                    )\n                } else {\n                    return(\n                        <Link className={`display-${this.state.displayNoHash}`} to={`/stats/${o.platform}/${o.username}`}>\n                            <div className=\"searchOption\">\n                                <h1><i className={`fab fa-${getPlatformIcon(o.platform)}`}></i> Search for <span className=\"searchTerm\">{o.username}</span></h1>\n                            </div>\n                        </Link>\n                    )\n                }\n            });\n        }\n    }\n\n    render() {\n        if (this.state.redirect !== null) {\n            return <Redirect to={this.state.redirect} />\n        }\n        if (false) {\n        return (\n            <div className=\"header\">\n                    <h1 className=\"logoText\"><NavLink to=\"/\"><img src={LogoSmall}></img> <span className=\"badge badge-dark\">BETA</span></NavLink></h1>\n                    <Navbar collapseOnSelect expand=\"lg\">\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\n                            <Nav className=\"mr-auto navLinks\">\n                                <NavLink to=\"/search\"><p><i className=\"fa fa-search\"></i><div>Search</div></p></NavLink>\n                                <NavLink to=\"/about\"><p><i className=\"fa fa-question\"></i><div>About</div></p></NavLink>\n                                <NavLink to=\"/\"><p><i className=\"fa fa-home\"></i><div>Home</div></p></NavLink>\n                                <NavLink to=\"/favorites\"><p><i className=\"fa fa-star\"></i><div>Favorites</div></p></NavLink>\n                                <NavLink to=\"/famous\"><p><i className=\"fa fa-microphone\"></i> <div>Famous</div></p></NavLink>\n                                <div className=\"extra-nav\">\n                                    <a href=\"https://www.buymeacoffee.com/parkersm1\" target=\"_blank\"><p><i class=\"far fa-coffee-togo\"></i></p></a>\n                                    <a href=\"https://discord.gg/A3d8kYpQ24\" target=\"_blank\"><p><i className=\"fab fa-discord\"></i></p></a>\n                                </div>\n\n                            </Nav>\n                            <Nav>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                   \n            </div>\n        );\n        } else {\n            return (\n                <div className=\"header\">\n                        <h1 className=\"logoText\"><NavLink to=\"/\"><img src={LogoSmall}></img> <span className=\"badge badge-dark\">BETA</span></NavLink></h1>\n                        <div className=\"row\">\n                            <div className=\"col-3\"></div>\n                            <div className=\"col-9 mainSection\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-8 col-md-12 col-12\">\n                                            <div class=\"statsDiv navMargin\">\n                                                <Form inline className=\"searchForm\" onSubmit={this.redirectToPage.bind(this)}>\n                                                    <InputGroup>\n                                                        <InputGroup.Prepend>\n                                                            <InputGroup.Text>\n                                                            <i className=\"fa fa-search\"></i>\n                                                            </InputGroup.Text>\n                                                        </InputGroup.Prepend>\n                                                        <FormControl onFocus={this.handleInputFocus} onBlur={this.handleInputBlur} onChange={ this.setUsername.bind(this) } value={this.state.username} type=\"text\" placeholder=\"Search\" className=\"noOutline mr-sm-2 searchField\" />\n                                                    </InputGroup>\n                                                </Form>\n                                                <div className={`searchOptions display-${this.state.displaySearch}`}>\n                                                    <Link onClick={this.clearInput} className={`display-${this.state.displayNoHash}`} to={`/stats/xbl/${this.state.username}`}>\n                                                        <div className=\"searchOption\">\n                                                            <h1><i className=\"fab fa-xbox\"></i> Search for <span className=\"searchTerm\">{this.state.username}</span></h1>\n                                                        </div>\n                                                    </Link>\n                                                    <Link onClick={this.clearInput} className={`display-${this.state.displayNoHash}`} to={`/stats/psn/${this.state.username}`}>\n                                                        <div className=\"searchOption\">\n                                                            <h1><i className=\"fab fa-playstation\"></i> Search for <span className=\"searchTerm\">{this.state.username}</span></h1>\n                                                        </div>\n                                                    </Link>\n                                                    <Link onClick={this.clearInput} className={`display-${this.state.displayHasHash}`} to={`/stats/battle/${this.state.username.replace(\"#\", \"%23\")}`}>\n                                                        <div className=\"searchOption\">\n                                                            <h1><i className=\"fab fa-battle-net\"></i> Search for <span className=\"searchTerm\">{this.state.username}</span></h1>\n                                                        </div>\n                                                    </Link>\n                                                    <p className=\"dropdownSubtext\">Search History • <span onClick={this.clearHistory}>Clear History</span></p>\n                                                    {this.renderSearches()}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-4\">\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                       \n                </div>\n            );\n        }\n    }\n}\n\nexport default Header;",["260","261"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Search.js",["262","263"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/NotFound.js",["264","265","266","267","268"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Famous.js",["269","270","271","272","273","274","275","276","277","278","279","280","281"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/components/Matches.js",["282","283","284"],"import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nexport default class Matches extends React.Component {\n\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            platform: null,\n            username: null,\n            matches: null,\n            isLoading: true,\n            error: null,\n            displayAlt: true\n        }\n\n        let baseURL = \"https://app.warzoneranks.app\";\n\n        if (process.env.NODE_ENV == \"development\" || window.location.href.includes(\"beta.warzoneranks.app\")) {\n            baseURL = \"https://app.warzoneranks.app/dev\";\n        }\n\n        this.baseURL = baseURL;\n    }\n\n    updateStats() {\n        fetch(`${this.baseURL}/ping`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.updateStatsPush();\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            let APIerror = \"We are currently experiencing some API issues, please try again soon..\";\n            this.setState({\n                error: APIerror,\n                isLoading: false\n            });\n          }\n        )\n    }\n\n    updateStatsPush() {\n        if (localStorage.getItem(`${this.props.platform}/${this.props.username}/matches`) != null) {\n            console.log(\"Match Cache Exists\");\n            var cachedStats = JSON.parse(localStorage.getItem(`${this.props.platform}/${this.props.username}/matches`));\n            if (Date.now() - cachedStats.timeGrabbed < 600000) {\n                this.setState({\n                    matches: cachedStats.data,\n                    error: null,\n                    isLoading: false\n                });\n            } else {\n                console.log(\"Match Fetching new because time\");\n                fetch(`${this.baseURL}/stats/${this.props.platform}/${this.props.username}/matches`)\n                .then(res => res.json())\n                .then(\n                (result) => {\n                    if (!result.error) {\n                        //console.log(result.data);\n                        var results = {\n                            data: result.data,\n                            timeGrabbed: Date.now(),\n                        }\n                        this.setState({\n                            matches: result.data,\n                            error: null,\n                            isLoading: false\n                        });\n                        localStorage.setItem(`${this.props.platform}/${this.props.username}/matches`, JSON.stringify(results));\n                    } else {\n                        this.setState({\n                        error: result.msg,\n                        isLoading: false\n                        });\n                    }\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                    error,\n                    isLoading: false\n                    });\n                    console.log(error);\n                }\n                )\n            }\n        } else {\n            console.log(\"Match Fetching new because doesn't exist\");\n            fetch(`${this.baseURL}/stats/${this.props.platform}/${this.props.username}/matches`)\n                .then(res => res.json())\n                .then(\n                (result) => {\n                    if (!result.error) {\n                        //console.log(result.data);\n                        var results = {\n                            data: result.data,\n                            timeGrabbed: Date.now(),\n                        }\n                        this.setState({\n                            matches: result.data,\n                            error: null,\n                            isLoading: false\n                        });\n                        localStorage.setItem(`${this.props.platform}/${this.props.username}/matches`, JSON.stringify(results));\n                    } else {\n                        this.setState({\n                        error: result.msg,\n                        isLoading: false\n                        });\n                    }\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                    error,\n                    isLoading: false\n                    });\n                    console.log(error);\n                }\n                )\n        }\n    }\n\n    componentWillMount() {\n        this.setState({\n            platform: this.props.platform,\n            username: this.props.username\n        })\n        this.updateStats();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.platform !== this.props.platform || this.state.username !== this.props.username) {\n            this.setState({ \n              platform: this.props.platform,\n              username: this.props.username,\n              isLoading: true\n            });\n            this.updateStats();\n          }\n    }\n    \n\n    renderRows() {\n        function convertGameName(name) {\n            let newName = name;\n            switch(name) {\n                case \"br_brquads\":\n                    newName = \"BR Quads\";\n                break;\n                case \"br_brtrios\":\n                    newName = \"BR Trios\";\n                break;\n                case \"br_brduos\":\n                    newName = \"BR Duos\";\n                break;\n                case \"br_brsolo\":\n                    newName = \"BR Solo\";\n                break;\n                case \"br_brz_brquads\":\n                    newName = \"BR Quads\";\n                break;\n                case \"br_brz_brtrios\":\n                    newName = \"BR Trios\";\n                break;\n                case \"br_brz_brduos\":\n                    newName = \"BR Duos\";\n                break;\n                case \"br_brz_brsolo\":\n                    newName = \"BR Solo\";\n                break;\n                case \"br_dmz_plndtrios\":\n                    newName = \"Plunder Trios\";\n                break;\n                case \"br_dmz_plunquad\":\n                    newName = \"Plunder Quads\";\n                break;\n                case \"br_rebirth_resurgence_trios\":\n                    newName=\"RS Trios\"\n                break;\n                case \"br_kingslayer_kingsltrios\":\n                    newName = \"KS Trios\"\n                break;\n                default:\n            }\n            return newName;\n        }\n\n        function convertDate(epoch) {\n            var d = new Date(0); \n            d.setUTCSeconds(epoch);\n            let minutes = d.getMinutes();\n            if (minutes.toString().length == 1) minutes = \"0\" + minutes.toString();\n            var dateString = d.getMonth() + 1 + \"/\" + d.getDate() + \"/\" + d.getFullYear() + \" \" + d.getHours() + \":\" + minutes;\n            return dateString;\n\n        }\n\n        function isWin(placement) {\n            if (placement == 1) {\n                return \"rank win\";\n            } else {\n                return \"rank\";\n            }\n\n        }\n\n        return  this.state.matches.map((o) => {\n            if (o.mode.includes(\"br_br\")) {\n                let rank = o.ranking.rank;\n                let rClass = o.ranking.class;\n                if (localStorage.getItem(`/match/${o.matchID}`) != null) {\n                    let localMatch = JSON.parse(localStorage.getItem(`/match/${o.matchID}`));\n                    //console.log(localMatch);\n                    rank = localMatch.ranking.rank;\n                    rClass = localMatch.ranking.class;\n                }\n                return (\n                    <Link key={o.matchID} to={`/match/${o.playerStats.teamPlacement}/${o.matchID}`}>\n                        <div className=\"stat match gray\" id={\"match-\" + o.matchID}>\n                            <div className=\"title\">{convertGameName(o.mode)} <span className=\"date\">{convertDate(o.utcStartSeconds)}</span></div>\n                            <div className={isWin(o.playerStats.teamPlacement)}>{o.playerStats.teamPlacement}</div>\n                            <div className={`lobbyRank ${rClass}`}>{rank}</div>\n                            <div className=\"matchStats\">\n                                <div class=\"matchStat\">\n                                    <h1>Kills</h1>\n                                    <p>{o.playerStats.kills}</p>\n                                </div>\n                                <div class=\"matchStat\">\n                                    <h1>Damage</h1>\n                                    <p>{o.playerStats.damageDone}</p>\n                                </div>\n                                <div class=\"matchStat extraStat\">\n                                    <h1>Score</h1>\n                                    <p>{o.playerStats.score}</p>\n                                </div>\n                            </div>\n                            <div className=\"openPage\">\n                            <i class=\"fas fa-external-link\"></i> More Stats\n                            </div>\n                        </div>\n                    </Link>\n                )\n            } else {\n                return (\n                    <div key={o.matchID} className={`stat match gray alt-match display-${this.props.displayAlt}`} id={\"match-\" + o.matchID}>\n                        <div className=\"title\">{convertGameName(o.mode)} <span className=\"date\">{convertDate(o.utcStartSeconds)}</span></div>\n                        <div className={isWin(o.playerStats.teamPlacement)}>{o.playerStats.teamPlacement}</div>\n                        <div className={`lobbyRank gray`}>NOT RANKED</div>\n                        <div className=\"matchStats\">\n                            <div class=\"matchStat\">\n                                <h1>Kills</h1>\n                                <p>{o.playerStats.kills}</p>\n                            </div>\n                            <div class=\"matchStat\">\n                                <h1>Damage</h1>\n                                <p>{o.playerStats.damageDone}</p>\n                            </div>\n                            <div class=\"matchStat extraStat\">\n                                <h1>Score</h1>\n                                <p>{o.playerStats.score}</p>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        });\n    }\n\n    render() {\n        if (this.state.error != null) {\n            return (     \n                <div className=\"page home\" id=\"page\">\n                    <div className=\"pageError\">\n                      <p>An error has occured..</p>\n                      <p>{this.state.error}</p>\n                    </div>\n                </div>\n            );\n        } else if (this.state.isLoading) {\n            return (\n                <div className=\"page home center m-t-20\" id=\"page\">\n                    <FontAwesome \n                    name='spinner-third'\n                    spin\n                    size='2x'\n                    className=\"m-t-20\"\n                    style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                    <div className=\"pageError\">\n                      <p>Working on pulling your data...</p>\n                      <p>Load time are longer than normal currently as we rank stats live</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"matches\">\n                {this.renderRows()}\n                </div>\n            );\n        }\n    }\n}\n","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Favorites.js",["285","286","287"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\n\nimport {\n    Link,\n    Redirect\n} from 'react-router-dom';\n\n\nclass Favorites extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          platform: '',\n          favorites: null,\n          redirect: null\n        };\n    }\n\n    getFavorites = () => {\n        if (localStorage.getItem(\"favorites\") != null) {\n            let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n            this.setState({\n                favorites: cachedUsers.favorites\n            });\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            username: '',\n            platform: 'xbl',\n            favorites: null,\n            redirect: null\n        });\n        this.getFavorites();\n        setInterval(this.getFavorites, 1000);\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    redirectToPage() {\n        console.log(`/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}`);\n        this.setState({ redirect: `/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}` });\n    }\n\n    setUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    } \n\n    setPlatform(e) {\n        this.setState({\n            platform: e.target.value\n        });\n    } \n\n    renderFavorites() {\n        function getPlatformIcon(platform) {\n            switch(platform) {\n                case \"xbl\": \n                    return \"xbox\";\n                    break;\n                case \"psn\": \n                    return \"playstation\";\n                    break;\n                case \"battle\": \n                    return \"battle-net\";\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        \n\n        if (this.state.favorites != null) {\n            return  this.state.favorites.map(function(o) {\n                return (\n                    <Link key={`${o.platform}/${o.username}`} to={`/stats/${o.platform}/${o.username}`}>\n                        <div className=\"favorite\">\n                            <p><i className={`fab fa-${getPlatformIcon(o.platform)}`}></i> {o.username.replace(\"%23\", \"#\")}</p>\n                        </div>\n                    </Link>\n                )\n            });\n        } else {\n            return (\n                <div className=\"pageError\">\n                      <h3>You have no favorites!</h3>\n                      <p>Add some by clicking the <i className=\"far fa-star\"></i> next to a users profile</p>\n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        if (this.state.redirect !== null) {\n            return <Redirect to={this.state.redirect} />\n        }\n        let title = \"Favorites\";\n        if (this.props.fromPage != null) {\n            title = this.props.fromPage;\n        }\n        return (\n            <DocumentTitle className=\"page\" title={`Warzone Stats - ${title}`}>\n            <div className=\"page home\" id=\"page\">\n                <h1 className=\"pageTitle aboutPageTitle\">Favorite Users</h1>\n                <div className=\"favorites\">\n                    {this.renderFavorites()}\n                </div>\n            </div>\n            </DocumentTitle>\n        );\n    };\n}\n\nexport default Favorites;","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Home.js",["288","289","290","291","292","293","294","295","296"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\n\nimport Stats from './Stats';\nimport Favorites from './Favorites';\nimport NewHome from './NewHome'\n\nimport {\n    Link,\n    Redirect\n} from 'react-router-dom';\n\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          platform: '',\n          redirect: null\n        };\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            username: '',\n            platform: 'xbl',\n            redirect: null\n        });\n        if (localStorage.getItem(\"favoriteUser\") != null) {\n            let cachedUser = JSON.parse(localStorage.getItem(\"favoriteUser\"));\n            console.log(`/stats/${cachedUser.platform}/${cachedUser.username.replace(\"#\", \"%23\")}`);\n            this.setState({ redirect: `/stats/${cachedUser.platform}/${cachedUser.username.replace(\"#\", \"%23\")}` });\n        }\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    redirectToPage(e) {\n        e.preventDefault();\n        console.log(`/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}`);\n        this.setState({ redirect: `/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}` });\n    }\n\n    setUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    } \n\n    setPlatform(e) {\n        this.setState({\n            platform: e.target.value\n        });\n    } \n\n\n    render() {\n        if (this.state.redirect !== null) {\n            return <NewHome />\n        }\n        return (\n            <DocumentTitle className=\"page\" title='Warzone Stats - Home'>\n           <div className=\"page home\" id=\"page\">\n                  <div className=\"container-fluid\">\n                      <div className=\"row\">\n                          <div className=\"col-lg-8 col-md-8 col-12\">\n                              <div className=\"statsDiv\">\n                                <div className=\"welcomeDiv \">\n                                    <h1 className=\"pageTitle\">Welcome to WZ Ranks Beta!</h1>\n                                    <h1 className=\"subTitle\">First Steps</h1>\n                                    <p>The first step is marking your profile as your home page! Use the search bar above to find your profile and click \"Mark as my profile\". </p>\n                                    <p>Once you've done this you will have your profile on your home page and you'll be able to use WZ Ranks just as before.</p>\n\n                                    <h1 className=\"subTitle\">What's new?</h1>\n                                    <p>We've added a whole bunch of new features including recent profiles, search history, display options, verified players, and much more.</p>\n                                    <p>Please keep in mind this is only the beta stages and we are open to feedback, you can give us feedback by joining our discord.</p>\n                                    \n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-lg-4 col-md-4 col-12\">\n\n                            </div>\n                        </div>\n                    </div>\n            </div>\n            </DocumentTitle>\n        );\n    };\n}\n\nexport default Home;",["297","298"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/UserMatch.js",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\n\nimport {\n    Link\n} from 'react-router-dom';\n\n\nclass Match extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          matchID: null,\n          place: null,\n          isLoading: true,\n          error: null,\n          matchStats: null,\n          displayOption: 0\n        };\n\n        let baseURL = \"https://app.warzoneranks.app\";\n\n        if (process.env.NODE_ENV == \"development\" || window.location.href.includes(\"beta.warzoneranks.app\")) {\n            baseURL = \"https://app.warzoneranks.app/dev\";\n        }\n\n        this.baseURL = baseURL;\n    }\n\n    updateStats() {\n        \n        fetch(`${this.baseURL}/ping`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.updateStatsPush();\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            let APIerror = \"We are currently experiencing some API issues, please try again soon..\";\n            this.setState({\n                error: APIerror,\n                isLoading: false\n            });\n          }\n        )\n    }\n\n\n\n    updateStatsPush() {\n        fetch(`${this.baseURL}/matches/fullMatch/${this.props.match.params.matchID}`)\n            .then(res => res.json())\n            .then(\n              (result) => {\n                if (!result.error) {\n                    let playersCounted = result.data.ranking.players;\n                    let accuracy = (playersCounted / 115) * 100;\n                    let newPlayers = result.data.allPlayers;\n                    let medianKD = Number.parseFloat(result.data.ranking.averageKD);\n                    let averageKD = Number.parseFloat(result.data.ranking.averageKD_avg);\n                    var matchStats = {\n                        allPlayers: newPlayers,\n                        timeGrabbed: Date.now(),\n                        mode: result.data.mode,\n                        start: result.data.startTime,\n                        ranking: {\n                            medianKD: medianKD.toFixed(2),\n                            averageKD: averageKD.toFixed(2),\n                            rank: result.data.ranking.rank,\n                            class: result.data.ranking.class,\n                            percentage: result.data.ranking.percentage,\n                            chart: result.data.ranking.kdChart,\n                            accuracy: accuracy.toFixed(0)\n                        }\n                    }\n              \n                    this.setState({\n                      matchStats: matchStats,\n                      error: null,\n                      isLoading: false\n                    });\n                    localStorage.setItem(`/match/${this.props.match.params.matchID}`, JSON.stringify(matchStats));\n                } else {\n                    this.setState({\n                      error: result.msg,\n                      isLoading: false\n                    });\n                }\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              (error) => {\n                this.setState({\n                  error,\n                  isLoading: false\n                });\n                console.log(error);\n              }\n            );\n\n    }\n\n    componentWillMount() {\n        this.setState({\n            matchID: this.props.match.params.matchID,\n            place: this.props.match.params.place\n        })\n        this.updateStats();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.matchID !== this.props.match.params.matchID) {\n          this.setState({ \n            matchID: this.props.match.params.matchID,\n            place: this.props.match.params.place,\n            isLoading: true\n          });\n          this.updateStats();\n        }\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    renderTeam() {\n        let isWin = (placement) => {\n            if (placement == 1) {\n                return \"place win\";\n            } else {\n                return \"place\";\n            }\n\n        }\n        let place = this.state.place;\n        return this.state.matchStats.allPlayers.map(function(p) {\n            if (p.metadata.placement.value == place) {\n                if (p.attributes.lifeTimeStats != null) {\n                    let headshot = (p.stats.headshots.value / p.stats.kills.value) * 100;\n                    if (Number.isNaN(headshot)) {\n                        headshot = 0.00;\n                    }\n                    return (\n                        <tr className=\"playerT\">\n                            <th className=\"playerName\"><div className={isWin(p.metadata.placement.value)}>{p.metadata.placement.value}</div> {p.metadata.platformUserHandle}</th>\n                            <th>{p.stats.kills.value}</th>\n                            <th>{p.attributes.lifeTimeStats.kdRatio}</th>\n                            <th>{p.stats.damageDone.value}</th>\n                            <th>{p.stats.deaths.value}</th>\n                            <th>{headshot.toFixed(2)}%</th>\n                        </tr>\n                    );\n                } else {\n                    let headshot = (p.stats.headshots.value / p.stats.kills.value) * 100;\n                    if (Number.isNaN(headshot)) {\n                        headshot = 0.00;\n                    }\n                    return (\n                        <tr className=\"playerT\">\n                            <th className=\"playerName\"><div className={isWin(p.metadata.placement.value)}>{p.metadata.placement.value}</div> {p.metadata.platformUserHandle}</th>\n                            <th>{p.stats.kills.value}</th>\n                            <th>{p.stats.kdRatio.displayValue}*</th>\n                            <th>{p.stats.damageDone.value}</th>\n                            <th>{p.stats.deaths.value}</th>\n                            <th>{headshot.toFixed(2)}%</th>\n                        </tr>\n                    );\n                }\n            }\n        });\n    }\n\n\n    renderPlayers() {\n        let isWin = (placement) => {\n            if (placement == 1) {\n                return \"place win\";\n            } else {\n                return \"place\";\n            }\n\n        }\n\n        return this.state.matchStats.allPlayers.map(function(p) {\n            if (p.attributes.lifeTimeStats != null) {\n                let headshot = (p.stats.headshots.value / p.stats.kills.value) * 100;\n                if (Number.isNaN(headshot)) {\n                    headshot = 0.00;\n                }\n                return (\n                    <tr className=\"playerT\">\n                        <th className=\"playerName\"><div className={isWin(p.metadata.placement.value)}>{p.metadata.placement.value}</div> {p.metadata.platformUserHandle}</th>\n                        <th>{p.stats.kills.value}</th>\n                        <th>{p.attributes.lifeTimeStats.kdRatio}</th>\n                        <th>{p.stats.damageDone.value}</th>\n                        <th>{p.stats.deaths.value}</th>\n                        <th>{headshot.toFixed(2)}%</th>\n                    </tr>\n                );\n            } else {\n                let headshot = (p.stats.headshots.value / p.stats.kills.value) * 100;\n                if (Number.isNaN(headshot)) {\n                    headshot = 0.00;\n                }\n                return (\n                    <tr className=\"playerT\">\n                        <th className=\"playerName\"><div className={isWin(p.metadata.placement.value)}>{p.metadata.placement.value}</div> {p.metadata.platformUserHandle}</th>\n                        <th>{p.stats.kills.value}</th>\n                        <th>{p.stats.kdRatio.displayValue}*</th>\n                        <th>{p.stats.damageDone.value}</th>\n                        <th>{p.stats.deaths.value}</th>\n                        <th>{headshot.toFixed(2)}%</th>\n                    </tr>\n                );\n            }\n        });\n    }\n\n    renderMatchStats() {\n        \n\n        if (this.state.displayOption == 0) {\n            return (\n                <div className=\"matches\">\n                    <h1 className=\"sub pad\">YOUR TEAM</h1>\n                    <table className=\"playersTable\">\n                        <tr className=\"top\">\n                            <th>NAME</th>\n                            <th>KILLS</th>\n                            <th>K/D</th>\n                            <th>DMG</th>\n                            <th>DEATHS</th>\n                            <th>HEADSHOT %</th>\n                        </tr>\n                        {this.renderTeam()}\n\n                    </table>\n\n                    <h1 className=\"sub pad\">ALL PLAYERS</h1>\n                    <table className=\"playersTable\">\n                        <tr className=\"top\">\n                            <th>NAME</th>\n                            <th>KILLS</th>\n                            <th>K/D</th>\n                            <th>DMG</th>\n                            <th>DEATHS</th>\n                            <th>HEADSHOT %</th>\n                        </tr>\n                        {this.renderPlayers()}\n\n                    </table>\n\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <div className=\"pageError\">\n                      <p>Oops!</p>\n                      <p>Teams are coming soon!</p>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        const { matchID, error, isLoading, matchStats } = this.state;\n\n        let convertGameName = (name) => {\n            let newName = name;\n            switch(name) {\n                case \"br_brquads\":\n                    newName = \"BR Quads\";\n                break;\n                case \"br_brtrios\":\n                    newName = \"BR Trios\";\n                break;\n                case \"br_brduos\":\n                    newName = \"BR Duos\";\n                break;\n                case \"br_brsolo\":\n                    newName = \"BR Solo\";\n                break;\n                case \"br_brz_brquads\":\n                    newName = \"BR Quads\";\n                break;\n                case \"br_brz_brtrios\":\n                    newName = \"BR Trios\";\n                break;\n                case \"br_brz_brduos\":\n                    newName = \"BR Duos\";\n                break;\n                case \"br_brz_brsolo\":\n                    newName = \"BR Solo\";\n                break;\n                case \"br_dmz_plndtrios\":\n                    newName = \"Plunder Trios\";\n                break;\n                case \"br_kingslayer_kingsltrios\":\n                    newName = \"KS Trios\"\n                break;\n                default:\n            }\n            return newName;\n        }\n\n        let teamActive = \"\";\n        let playersActive = \"active\";\n\n        if (this.state.displayOption == 1) {\n            teamActive = \"active\";\n            playersActive = \"\";\n        } else {\n            teamActive = \"\";\n            playersActive = \"active\";\n        }\n\n        let showTeams = () => {\n            if (this.state.displayOption != 1) {\n                this.setState({\n                    displayOption: 1\n                });\n                teamActive = \"active\";\n                playersActive = \"\";\n            }\n        }\n\n        let showPlayers = () => {\n            if (this.state.displayOption != 0) {\n                this.setState({\n                    displayOption: 0\n                });\n                teamActive = \"\";\n                playersActive = \"active\";\n            }\n        }\n\n        let convertNumToDay = (num) => {\n            switch(num) {\n                case 0: \n                    return \"Sunday\";\n                    break;\n                case 1:\n                    return \"Monday\";\n                    break;\n                case 2:\n                    return \"Tuesday\";\n                    break;\n                case 3:\n                    return \"Wednesday\";\n                    break;\n                case 4: \n                    return \"Thursday\";\n                    break;\n                case 5:\n                    return \"Friday\";\n                    break;\n                case 6:\n                    return \"Saturday\";\n                    break;\n            }\n        }\n\n        let convertDate = (epoch) => {\n            var d = new Date(0); \n            var sec = epoch / 1000;\n            d.setUTCSeconds(sec);\n            let minutes = d.getMinutes();\n            if (minutes.toString().length == 1) minutes = \"0\" + minutes.toString();\n            var dateString = convertNumToDay(d.getDay()) + \" \" + (d.getMonth() + 1) + \"/\" + d.getDate() + \"/\" + d.getFullYear() + \" • \" + d.getHours() + \":\" + minutes;\n            return dateString;\n\n        }\n\n        let isWin = (placement) => {\n            if (placement == 1) {\n                return \"rank win\";\n            } else {\n                return \"rank\";\n            }\n\n        }\n\n        if (error != null) {\n            return (\n                <DocumentTitle className=\"page\" title=\"Warzone Stats - Stats\">\n                <div className=\"page home\" id=\"page\">\n                    <div className=\"pageError\">\n                      <p>An error has occured..</p>\n                      <p>{error}</p>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        } else if (isLoading) {\n            return (\n                <DocumentTitle className=\"page\" title='Warzone Stats - Stats'>\n                <div className=\"page home center m-t-20\" id=\"page\">\n                    <FontAwesome \n                    name='spinner-third'\n                    spin\n                    size='2x'\n                    className=\"m-t-20\"\n                    style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                    <div className=\"pageError\">\n                      <p>Working on pulling match data...</p>\n                      <p>Load time are longer than normal currently as we rank stats live</p>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        } else {\n            let pageName = `Warzone Stats - Match #${this.state.matchID}`;\n            return (\n            <DocumentTitle className=\"page\"  title={pageName}>\n              <div className=\"page home\" id=\"page\">\n                  <div className=\"container-fluid\">\n                      <div className=\"row\">\n                          <div className=\"col-lg-8 col-md-8 col-12\">\n                              <div className=\"statsDiv \">\n                                    <h1 className=\"sub pad\">Match Data</h1>\n                                  {this.renderMatchStats()}\n                              </div>\n                          </div>\n                          \n                          <div className=\"col-lg-4 col-md-4 col-12\">\n                              <div className=\"statsDiv\">\n                                  <h1 className=\"sub pad\">Match Details</h1>\n                                  <div className=\"statsBox\">\n                                      <div className=\"mainStats\">\n                                          <h1 className=\"username\">{convertGameName(`${matchStats.mode}`)}</h1>\n                                          <h1 className=\"date\">{convertDate(`${matchStats.start}`)}</h1>\n                                          <div className=\"matchOptions\">\n                                            <div onClick={showPlayers} className={`matchOption ${playersActive}`}>Players</div>\n                                            <div onClick={showTeams} className={`matchOption ${teamActive}`}>Teams</div>\n                                        </div>\n                                      </div>\n                                  </div>\n                                  <div className={`stat matchDifficulty stat-bigger m-h-130 ${matchStats.ranking.class}`}>\n                                    <h1 className=\"mid statTitle\">DIFFICULTY</h1>\n                                    <h1 className=\"mid statRanking\">{matchStats.ranking.rank}</h1>\n                                    <div className=\"mid statDif\"><div className={`percent ${matchStats.ranking.chart}`}></div></div>\n                                    <div className=\"bottom\">{matchStats.ranking.percentage}</div>\n                                  </div>\n                                  <div className=\"statsBox\">\n                                      <h1 className=\"statsTitle\">\n                                          Ranking Details\n                                      </h1>\n                                      <div className=\"rankedStat\">\n                                          <h1>Median K/D</h1>\n                                          <p>{matchStats.ranking.medianKD}</p>\n                                      </div>\n                                      <div className=\"rankedStat\">\n                                          <h1>Average K/D</h1>\n                                          <p>{matchStats.ranking.averageKD}</p>\n                                      </div>\n                                      <div className=\"rankedStat\">\n                                          <h1>Accuracy</h1>\n                                          <p>{matchStats.ranking.accuracy}%</p>\n                                      </div>\n                                  </div>\n                                  \n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              </DocumentTitle>\n            );\n        }\n    };\n}\n\nexport default Match;","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Stats.js",["325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\nimport Matches from '../components/Matches';\nimport toast from 'react-hot-toast';\n\nimport {\n    Link\n} from 'react-router-dom';\n\n\nclass Stats extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          platform: null,\n          username: null,\n          stats: {\n              level: null,\n              kd: null,\n              wins: null,\n              gamesPlayed: null,\n              weekly: {\n                kd: null,\n                kills: null,\n                killsPerGame: null\n              }\n          },\n          matches: null,\n          isLoading: true,\n          error: null,\n          isHome: null,\n          homeText: \" Mark as my profile\",\n          isFav: null,\n          favText: \" Favorite\",\n          minutesLeft: 10,\n          secondsLeft: 0,\n          displayOption: false\n        };\n\n        let baseURL = \"https://app.warzoneranks.app\";\n\n        if (process.env.NODE_ENV == \"development\" || window.location.href.includes(\"beta.warzoneranks.app\")) {\n          baseURL = \"https://app.warzoneranks.app/dev\";\n        }\n\n        this.baseURL = baseURL;\n    }\n\n    updateStats() {\n        if (localStorage.getItem(\"favoriteUser\") != null) {\n          let cachedUser = JSON.parse(localStorage.getItem(\"favoriteUser\"));\n          if (this.props.match.params.username == cachedUser.username && this.props.match.params.platform == cachedUser.platform) {\n            this.setState({isHome: true, \"homeText\": \"\"});\n            console.log('is home');\n          } else {\n            this.setState({isHome: false, \"homeText\": \" Mark as my profile\"});\n            console.log('is not home');\n          }\n        }\n\n        if (localStorage.getItem(\"recent\") != null) {\n          let recentUsersData = JSON.parse(localStorage.getItem(\"recent\"));\n          let username = this.props.match.params.username;\n          let platform = this.props.match.params.platform;\n          let recentUsers = recentUsersData.recent;\n          let alreadyInList = false;\n          let indexOfUser = 0;\n          let counter = -1;\n          recentUsers.map(function (o) {\n            counter = counter + 1;\n            if (o.username == username && o.platform == platform) {\n              alreadyInList = true;\n              indexOfUser = counter;\n            }\n          });\n          if (alreadyInList) {\n            recentUsers.splice(indexOfUser, 1);\n            console.log(\"Trying to add \" + {\n              username: username,\n              platform: platform\n            })\n            recentUsers.unshift({\n              username: username,\n              platform: platform\n            });\n            console.log(\"After adding: \" + recentUsers);\n          } else {\n            if (recentUsers.length == 5) {\n              recentUsers.pop();\n            }\n            console.log(\"Trying to add \" + {\n              username: username,\n              platform: platform\n            })\n            recentUsers.unshift({\n              username: username,\n              platform: platform\n            });\n            console.log(\"After adding: \" + recentUsers);\n          }\n          let newRecentJson = {\n            recent: recentUsers\n          }\n          localStorage.setItem(\"recent\", JSON.stringify(newRecentJson));\n        } else {\n          let username = this.props.match.params.username;\n          let platform = this.props.match.params.platform;\n          let recentUsers = [];\n          recentUsers.unshift({\n            username: username,\n            platform: platform\n          });\n          let newRecentJson = {\n            recent: recentUsers\n          }\n          localStorage.setItem(\"recent\", JSON.stringify(newRecentJson));\n        }\n\n        if (localStorage.getItem(\"searches\") != null) {\n          let searchUsersData = JSON.parse(localStorage.getItem(\"searches\"));\n          let username = this.props.match.params.username;\n          let platform = this.props.match.params.platform;\n          let searchedUsers = searchUsersData.searches;\n          let alreadyInList = false;\n          let indexOfUser = 0;\n          let counter = -1;\n          searchedUsers.map(function (o) {\n            counter = counter + 1;\n            if (o.username == username && o.platform == platform) {\n              alreadyInList = true;\n              indexOfUser = counter;\n            }\n          });\n          if (alreadyInList) {\n            searchedUsers.splice(indexOfUser, 1);\n            console.log(\"Trying to add \" + {\n              username: username,\n              platform: platform\n            })\n            searchedUsers.unshift({\n              username: username,\n              platform: platform\n            });\n            console.log(\"After adding: \" + searchedUsers);\n          } else {\n            if (searchedUsers.length == 100) {\n              searchedUsers.pop();\n            }\n            console.log(\"Trying to add \" + {\n              username: username,\n              platform: platform\n            })\n            searchedUsers.unshift({\n              username: username,\n              platform: platform\n            });\n            console.log(\"After adding: \" + searchedUsers);\n          }\n          let newSearchedJson = {\n            searches: searchedUsers\n          }\n          localStorage.setItem(\"searches\", JSON.stringify(newSearchedJson));\n        } else {\n          let username = this.props.match.params.username;\n          let platform = this.props.match.params.platform;\n          let searchedUsers = [];\n          searchedUsers.unshift({\n            username: username,\n            platform: platform\n          });\n          let newSearchedJson = {\n            searches: searchedUsers\n          }\n          localStorage.setItem(\"searches\", JSON.stringify(newSearchedJson));\n        }\n\n        if (localStorage.getItem(\"favorites\") != null) {\n          let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n          let username = this.props.match.params.username;\n          let platform = this.props.match.params.platform;\n          console.log(username, platform);\n          let isFav = false;\n          cachedUsers.favorites.map(function(o) {\n            console.log(o.username, o.platform);\n            if (o.username == username && o.platform == platform) {\n              isFav = true;\n            } \n          });\n          if (isFav) {\n            this.setState({isFav: true, \"favText\": \"\"});\n            console.log('is fav');\n          } else {\n            this.setState({isFav: false, \"favText\": \" Favorite\"});\n            console.log('is not fav');\n          }\n        }\n        fetch(`${this.baseURL}/ping`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.updateStatsPush();\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            let APIerror = \"We are currently experiencing some API issues, please try again soon..\";\n            this.setState({\n                error: APIerror,\n                isLoading: false\n            });\n          }\n        )\n    }\n\n\n\n    updateStatsPush() {\n        function millisToMinutesAndSeconds(millis) {\n          var minutes = Math.floor(millis / 60000);\n          var seconds = ((millis % 60000) / 1000).toFixed(0);\n          let timeLeft = {\n            minutes: minutes,\n            seconds: seconds\n          };\n          return timeLeft;\n        }\n        if (localStorage.getItem(`${this.props.match.params.platform}/${this.props.match.params.username}/matches`) != null) {\n          console.log(\"Match Cache Exists\");\n          var cachedStats = JSON.parse(localStorage.getItem(`${this.props.match.params.platform}/${this.props.match.params.username}/matches`));\n          if (Date.now() - cachedStats.timeGrabbed < 600000) {\n            let difference = Date.now() - cachedStats.timeGrabbed;\n            let timeLeft = millisToMinutesAndSeconds(600000 - difference);\n            this.setState({\n              minutesLeft: timeLeft.minutes,\n              secondsLeft: timeLeft.seconds\n            });\n          } else {\n            this.setState({\n              minutesLeft: 10,\n              secondsLeft: 0\n            });\n\n          }\n        }\n        if (localStorage.getItem(`${this.props.match.params.platform}/${this.props.match.params.username}`) != null) {\n          console.log(\"Match Cache Exists\");\n          var cachedStats = JSON.parse(localStorage.getItem(`${this.props.match.params.platform}/${this.props.match.params.username}`));\n          if (Date.now() - cachedStats.timeGrabbed < 600000) {\n            console.log(\"Using cache\");\n            console.log(cachedStats.timeGrabbed);\n            this.setState({\n              stats: cachedStats,\n              error: null,\n              isLoading: false\n            });\n          } else {\n            console.log(\"Fetching new because time\");\n            fetch(`${this.baseURL}/stats/${this.props.match.params.platform}/${this.props.match.params.username}`)\n            .then(res => res.json())\n            .then(\n              (result) => {\n                if (!result.error) {\n                    var stats = {\n                        timeGrabbed: Date.now(),\n                        roles: result.data.roles,\n                        social: result.data.social,\n                        level: result.data.level,\n                        kd: result.data.kd,\n                        wins: result.data.wins,\n                        gamesPlayed: result.data.gamesPlayed,\n                        killsPerGame: result.data.killsPerGame,\n                        weekly: {\n                          kd: result.data.weekly.kd,\n                          kills: result.data.weekly.kills,\n                          killsPerGame: result.data.weekly.killsPerGame\n                        },\n                        ranking: {\n                          kd: {\n                            rank: result.data.ranking.kd.rank,\n                            class: result.data.ranking.kd.class,\n                            percentage: result.data.ranking.kd.percentage\n                          },\n                          wins: {\n                            rank: result.data.ranking.wins.rank,\n                            class: result.data.ranking.wins.class,\n                            percentage: result.data.ranking.wins.percentage\n                          },\n                          killsPerGame: {\n                            rank: result.data.ranking.killsPerGame.rank,\n                            class: result.data.ranking.killsPerGame.class,\n                            percentage: result.data.ranking.killsPerGame.percentage\n                          }\n                        }\n                    }\n                    this.setState({\n                      stats: stats,\n                      error: null,\n                      isLoading: false\n                    });\n                    localStorage.setItem(`${this.props.match.params.platform}/${this.props.match.params.username}`, JSON.stringify(stats));\n                } else {\n                    this.setState({\n                      error: result.msg,\n                      isLoading: false\n                    });\n                }\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              (error) => {\n                this.setState({\n                  error,\n                  isLoading: false\n                });\n                console.log(error);\n              }\n            )\n          }\n        } else {\n          console.log(\"Fetching new because doesn't exist\");\n          fetch(`${this.baseURL}/stats/${this.props.match.params.platform}/${this.props.match.params.username}`)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              if (!result.error) {\n                  var stats = {\n                      timeGrabbed: Date.now(),\n                      level: result.data.level,\n                      roles: result.data.roles,\n                      social: result.data.social,\n                      kd: result.data.kd,\n                      wins: result.data.wins,\n                      gamesPlayed: result.data.gamesPlayed,\n                      killsPerGame: result.data.killsPerGame,\n                      weekly: {\n                        kd: result.data.weekly.kd,\n                        kills: result.data.weekly.kills,\n                        killsPerGame: result.data.weekly.killsPerGame\n                      },\n                      ranking: {\n                        kd: {\n                          rank: result.data.ranking.kd.rank,\n                          class: result.data.ranking.kd.class,\n                          percentage: result.data.ranking.kd.percentage\n                        },\n                        wins: {\n                          rank: result.data.ranking.wins.rank,\n                          class: result.data.ranking.wins.class,\n                          percentage: result.data.ranking.wins.percentage\n                        },\n                        killsPerGame: {\n                          rank: result.data.ranking.killsPerGame.rank,\n                          class: result.data.ranking.killsPerGame.class,\n                          percentage: result.data.ranking.killsPerGame.percentage\n                        }\n                      }\n                  }\n                  this.setState({\n                    stats: stats,\n                    error: null,\n                    isLoading: false\n                  });\n                  localStorage.setItem(`${this.props.match.params.platform}/${this.props.match.params.username}`, JSON.stringify(stats));\n              } else {\n                  this.setState({\n                    error: result.msg,\n                    isLoading: false\n                  });\n              }\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                error,\n                isLoading: false\n              });\n              console.log(error);\n            }\n          )\n        }\n        \n\n        /*fetch(`https://app.warzoneranks.app/stats/${this.props.match.params.platform}/${this.props.match.params.username}/matches`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            if (!result.error) {\n                console.log(result.data);\n                this.setState({\n                  matches: result.data,\n                  error: null,\n                  isLoading: false\n                });\n            } else {\n                this.setState({\n                  error: result.msg,\n                  isLoading: false\n                });\n            }\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              error,\n              isLoading: false\n            });\n            console.log(error);\n          }\n        )*/\n    }\n\n    componentWillMount() {\n        this.setState({\n            platform: this.props.match.params.platform,\n            username: this.props.match.params.username\n        })\n        this.updateStats();\n        this.refreshTimer = setInterval(() => {\n          const { secondsLeft, minutesLeft } = this.state\n          if (secondsLeft > 0) {\n            this.setState(({ secondsLeft }) => ({\n              secondsLeft: secondsLeft - 1\n            }))\n          }\n          if (secondsLeft === 0) {\n            if (minutesLeft === 0) {\n              this.updateStats();\n            } else {\n              this.setState(({ minutesLeft }) => ({\n                minutesLeft: minutesLeft - 1,\n                secondsLeft: 59\n              }))\n            }\n          }\n        }, 1000);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.platform !== this.props.match.params.platform || this.state.username !== this.props.match.params.username ) {\n          this.setState({ \n            platform: this.props.match.params.platform,\n            username: this.props.match.params.username,\n            isLoading: true\n          });\n          this.updateStats();\n        }\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n\n    render() {\n        let makeHomeUser = () => {\n          if (this.state.isHome) {\n            localStorage.removeItem('favoriteUser');\n            this.setState({isHome: false, homeText: \" Mark as my profile\"});\n            toast.success(\"No longer marked as your profile\");\n          } else {\n            let favoriteUser = {\n              username: this.state.username,\n              platform: this.state.platform\n            };\n            localStorage.setItem('favoriteUser', JSON.stringify(favoriteUser));\n            this.setState({isHome: true, homeText: \"\"});\n            toast.success(\"Marked as your profile\");\n          \n          }\n        }\n\n        let makeFavoriteUser = () => {\n          let username = this.state.username;\n          let platform = this.state.platform;\n          if (this.state.isFav) {\n            let counter = -1;\n            let index;\n            let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n            let workingArray = cachedUsers.favorites;\n            workingArray.map(function(o) {\n              counter = counter + 1;\n              if (o.username == username && o.platform == platform) {\n                index = counter;\n              } \n            });\n            workingArray.splice(index, 1);\n            if (workingArray.length != 0) {\n              let newJson = {\n                favorites: workingArray\n              }\n              localStorage.setItem(\"favorites\", JSON.stringify(newJson));\n            } else {\n              localStorage.removeItem(\"favorites\");\n            }\n            this.setState({isFav: false, favText: \" Favorite\"});\n            toast.success(\"Removed from favorites\");\n          } else {\n            if (localStorage.getItem(\"favorites\") != null) {\n              let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n              let workingArray = cachedUsers.favorites;\n              let favoriteUser = {\n                username: username,\n                platform: platform\n              };\n              workingArray.push(favoriteUser);\n              let newJson = {\n                favorites: workingArray\n              }\n              localStorage.setItem(\"favorites\", JSON.stringify(newJson));\n            } else {\n              let workingArray = [];\n              let favoriteUser = {\n                username: username,\n                platform: platform\n              };\n              workingArray.push(favoriteUser);\n              let newJson = {\n                favorites: workingArray\n              }\n              localStorage.setItem(\"favorites\", JSON.stringify(newJson));\n            }\n            this.setState({isFav: true, favText: \"\"});\n            toast.success(\"Added to favorites\");\n          }\n        }\n\n        let allActive = \"\";\n        let brActive = \"active\";\n\n        if (this.state.displayOption == true) {\n            allActive = \"active\";\n            brActive = \"\";\n        } else {\n            allActive = \"\";\n            brActive = \"active\";\n        }\n\n        let showAll = () => {\n            if (this.state.displayOption != true) {\n                this.setState({\n                    displayOption: true\n                });\n                allActive = \"active\";\n                brActive = \"\";\n            }\n        }\n\n        let showBR = () => {\n            if (this.state.displayOption != false) {\n                this.setState({\n                    displayOption: false\n                });\n                allActive = \"\";\n                brActive = \"active\";\n            }\n        }\n\n        let userRoles = () => {\n          return  this.state.stats.roles.map((o) => {\n            if (o.roleID != 3) {\n              return (\n                <OverlayTrigger\n                  key={'owner'}\n                  placement={'top'}\n                  overlay={\n                    <Tooltip id={`tooltip-owner`}>\n                      <strong>{o.name}</strong>\n                    </Tooltip>\n                  }\n                >\n                  <div className={`siteRole ${o.class}`}>\n                    <i className={o.className}></i>\n                  </div>\n                </OverlayTrigger>\n              );\n            }\n          });\n        }\n\n        let verification = () => {\n          return  this.state.stats.roles.map((o) => {\n            if (o.roleID == 3) {\n              return (\n                <OverlayTrigger\n                  key={'owner'}\n                  placement={'top'}\n                  overlay={\n                    <Tooltip id={`tooltip-owner`}>\n                      <strong>{o.name}</strong>\n                    </Tooltip>\n                  }\n                >\n                  <div className={`${o.class}`}>\n                    <i className={o.className}></i>\n                  </div>\n                </OverlayTrigger>\n              );\n                }\n          });\n        }\n\n        let socials = () => {\n          return  this.state.stats.social.map((o) => {\n              if (o.name == \"twitch\") {\n                return (\n                  <a className=\"twitch social\" target=\"_blank\" href={`https://twitch.tv/${o.username}`}>\n                    <i className=\"fab fa-twitch\"></i>\n                  </a>\n                );\n              }\n              if (o.name == \"twitter\") {\n                return (\n                  <a className=\"twitter social\" target=\"_blank\" href={`https://twitter.com/${o.username}`}>\n                    <i className=\"fab fa-twitter\"></i>\n                  </a>\n                );\n              }\n          });\n        }\n\n        const { platform, username, error, stats, matches, isLoading, minutesLeft, secondsLeft} = this.state;\n\n\n\n        if (error != null) {\n          return (\n              <DocumentTitle className=\"page\" title='Warzone Stats - Stats'>\n              <div className=\"page home\" id=\"page\">\n                  <div className=\"container-fluid\">\n                      <div className=\"row\">\n                          <div className=\"col-lg-8 col-md-8 col-12\">\n                              <div className=\"statsDiv \">\n                                  <div className=\"pageError\">\n                                    <p>An error has occured..</p>\n                                    <p>{error}</p>\n                                  </div>\n                              </div>\n                          </div>\n                          \n                          <div className=\"col-lg-4 col-md-4 col-12\">\n                              <div className=\"statsDiv\">\n                                  <h1 className=\"sub pad\">Uh oh!</h1>\n                                  <div className=\"statsBox\">\n                                      <div className=\"mainStats\">\n                                          <h1 className=\"username\">An error occured</h1>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              </DocumentTitle>\n          );\n      } else if (isLoading) {\n          return (\n              <DocumentTitle className=\"page\" title='Warzone Stats - Stats'>\n              <div className=\"page home\" id=\"page\">\n                  <div className=\"container-fluid\">\n                      <div className=\"row\">\n                          <div className=\"col-lg-8 col-md-8 col-12\">\n                              <div className=\"statsDiv \">\n                                  <h1 className=\"sub pad\">Matches</h1>\n                                  <FontAwesome \n                                      name='spinner-third'\n                                      spin\n                                      size='2x'\n                                      className=\"m-t-20\"\n                                      style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                                      <div className=\"pageError\">\n                                      <p>Working on pulling your data...</p>\n                                      <p>Load time are longer than normal currently as we rank stats live</p>\n                                      </div>\n                              </div>\n                          </div>\n                          \n                          <div className=\"col-lg-4 col-md-4 col-12\">\n                              <div className=\"statsDiv\">\n                                  <h1 className=\"sub pad\">Stats</h1>\n                                  <div className=\"statsBox\">\n                                      <div className=\"mainStats\">\n                                          <h1 className=\"username\">{username.replace(\"%23\", \"#\")}</h1>\n                                      </div>\n                                  </div>\n                                  <FontAwesome \n                                          name='spinner-third'\n                                          spin\n                                          size='2x'\n                                          className=\"m-t-20\"\n                                          style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              </DocumentTitle>\n          );\n      } else {\n          let pageName = `Warzone Stats - Home`;\n          return (\n              <DocumentTitle className=\"page\" title={pageName}>\n              <div className=\"page home\" id=\"page\">\n                  <div className=\"container-fluid\">\n                      <div className=\"row\">\n                          <div className=\"col-lg-8 col-md-8 col-12\">\n                              <div className=\"statsDiv \">\n                                  <h1 className=\"sub pad\">Matches</h1>\n                                  \n                                  <Matches displayAlt={this.state.displayOption} platform={platform} username={username}></Matches>\n                              </div>\n                          </div>\n                          \n                          <div className=\"col-lg-4 col-md-4 col-12\">\n                              <div className=\"statsDiv\">\n                                  <h1 className=\"sub pad\">Stats</h1>\n                                  <div className=\"statsBox first\">\n                                      <div className=\"mainStats\">\n                                          <h1 className=\"username\">{userRoles()} {username.replace(\"%23\", \"#\")} {verification()}</h1>\n                                          <div className=\"socials\">\n                                            {socials()}\n                                          </div>\n                                          <div className=\"userOptions\">\n                                              <span onClick={makeHomeUser} className={`makeHomeB fav-${this.state.isHome}`}><i className=\"fal fa-home\"></i>{this.state.homeText}</span>\n                                              <span onClick={makeFavoriteUser} className={`makeFav favo-${this.state.isFav}`}><i className=\"far fa-star\"></i>{this.state.favText}</span>\n                                          </div>\n                                          <div className=\"refreshTimer\">\n                                              <p><i className=\"far fa-clock\"></i> {minutesLeft}:{ secondsLeft < 10 ? `0${ secondsLeft }` : secondsLeft }</p>\n                                          </div>\n                                          <div className=\"matchOptions\">\n                                            <div onClick={showAll} className={`matchOption ${allActive}`}>All</div>\n                                            <div onClick={showBR} className={`matchOption ${brActive}`}>Just BR</div>\n                                        </div>\n                                      </div>\n                                  </div>\n                                  <div className=\"statsBox\">\n                                      <h1 className=\"statsTitle\">\n                                          Lifetime\n                                      </h1>\n                                      <div className=\"rankedStat\">\n                                          <h1>K/D</h1>\n                                          <p>{stats.kd}</p>\n                                          <p className={`ranking ${stats.ranking.kd.class}`}>{stats.ranking.kd.rank} - {stats.ranking.kd.percentage}</p>\n                                      </div>\n                                      <div className=\"rankedStat\">\n                                          <h1>Wins</h1>\n                                          <p>{stats.wins}</p>\n                                          <p className={`ranking ${stats.ranking.wins.class}`}>{stats.ranking.wins.rank} - {stats.ranking.wins.percentage}</p>\n                                      </div>\n                                      <div className=\"rankedStat\">\n                                          <h1>Kills/Game</h1>\n                                          <p>{stats.killsPerGame}</p>\n                                          <p className={`ranking ${stats.ranking.killsPerGame.class}`}>{stats.ranking.killsPerGame.rank} - {stats.ranking.killsPerGame.percentage}</p>\n                                      </div>\n                                  </div>\n\n                                  <div className=\"statsBox\">\n                                      <h1 className=\"statsTitle\">\n                                          Weekly\n                                      </h1>\n                                      <div className=\"rankedStat\">\n                                          <h1>K/D</h1>\n                                          <p><span>{stats.weekly.kd}{stats.weekly.kd > stats.kd && <FontAwesome \n                        name='long-arrow-up'\n                        style={{ color: '#27ae60', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}{stats.weekly.kd < stats.kd && <FontAwesome \n                          name='long-arrow-down'\n                          style={{ color: '#c0392b', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}</span></p>\n                                      </div>\n                                      <div className=\"rankedStat\">\n                                          <h1>Kills</h1>\n                                          <p>{stats.weekly.kills}</p>\n                                      </div>\n                                      <div className=\"rankedStat\">\n                                          <h1>Kills/Game</h1>\n                                          <p><span>{stats.weekly.killsPerGame}{stats.weekly.killsPerGame > stats.killsPerGame && <FontAwesome \n                        name='long-arrow-up'\n                        style={{ color: '#27ae60', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}{stats.weekly.killsPerGame < stats.killsPerGame && <FontAwesome \n                          name='long-arrow-down'\n                          style={{ color: '#c0392b', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}</span></p>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              </DocumentTitle>\n          );\n      }\n  };\n}\n\nexport default Stats;","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/reportWebVitals.js",[],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/App.js",["362","363","364","365"],"import './App.css';\n\nimport Header from './components/Header';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Stats from './pages/Stats';\nimport Search from './pages/Search';\nimport Favorites from './pages/Favorites';\nimport NotFound from './pages/NotFound';\nimport About from './pages/About';\nimport Famous from './pages/Famous';\nimport Recent from './pages/Recent';\nimport UserMatch from './pages/UserMatch';\nimport NewHome from './pages/NewHome';\nimport Social from './pages/Social';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n            <Header />\n            <div className=\"row\">\n              <div className=\"col-lg-3 col-md-12 col-12 hiddenMobile statsDiv\">\n                <h1 className=\"sub pad\">Players</h1>\n                <Favorites fromPage=\"Home\" />\n                <Recent fromPage=\"Home\" />\n                <Social fromPage=\"Home\" />\n              </div>\n              <div className=\"col-lg-9 col-md-12 col-12 mainSection\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/stats/:platform/:username\" component={Stats} />\n                <Route path='/about' component={About}/>\n                <Route path='/newHome' component={NewHome}/>\n                <Route path='/search' component={Search}/>\n                <Route path='/famous' component={Famous}/>\n                <Route path='/favorites' component={Favorites}/>\n                <Route path='/match/:place/:matchID' component={UserMatch}/>\n                <Route path='/404' component={NotFound}/>\n                <Route render={() => (\n                  <Redirect to=\"/404\"/>\n                )}/>\n              </Switch>\n              </div>\n            </div>\n      </BrowserRouter>\n      <Toaster position=\"bottom-center\" toastOptions={{\n        style: {\n          color: '#000',\n        }\n      }}/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/NewHome.js",["366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\nimport { Container, Row, Col, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\nimport Matches from '../components/Matches';\n\nimport {\n    Link\n} from 'react-router-dom';\n\n\nclass NewHome extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          platform: null,\n          username: null,\n          stats: {\n              level: null,\n              kd: null,\n              wins: null,\n              gamesPlayed: null,\n              weekly: {\n                kd: null,\n                kills: null,\n                killsPerGame: null\n              }\n          },\n          matches: null,\n          isLoading: true,\n          error: null,\n          isHome: null,\n          homeText: \" Mark as my profile\",\n          isFav: null,\n          favText: \" Favorite\",\n          minutesLeft: 10,\n          secondsLeft: 0,\n          displayOption: false\n        };\n\n        let platform;\n        let username;\n\n        if (localStorage.getItem(\"favoriteUser\") != null) {\n            let favUser = JSON.parse(localStorage.getItem(\"favoriteUser\"));\n            platform = favUser.platform;\n            username = favUser.username;\n            console.log(favUser);\n        }\n\n        this.platform = platform;\n        this.username = username;\n\n        let baseURL = \"https://app.warzoneranks.app\";\n\n        if (process.env.NODE_ENV == \"development\" || window.location.href.includes(\"beta.warzoneranks.app\")) {\n          baseURL = \"https://app.warzoneranks.app/dev\";\n        }\n\n        this.baseURL = baseURL;\n    }\n\n    updateStats() {\n        if (localStorage.getItem(\"favoriteUser\") != null) {\n          let cachedUser = JSON.parse(localStorage.getItem(\"favoriteUser\"));\n          if (this.username == cachedUser.username && this.platform == cachedUser.platform) {\n            this.setState({isHome: true, \"homeText\": \"\"});\n            console.log('is home');\n          } else {\n            this.setState({isHome: false, \"homeText\": \" Mark as my profile\"});\n            console.log('is not home');\n          }\n        }\n\n        if (localStorage.getItem(\"favorites\") != null) {\n          let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n          let username = this.username;\n          let platform = this.platform;\n          console.log(username, platform);\n          let isFav = false;\n          cachedUsers.favorites.map(function(o) {\n            console.log(o.username, o.platform);\n            if (o.username == username && o.platform == platform) {\n              isFav = true;\n            } \n          });\n          if (isFav) {\n            this.setState({isFav: true, \"favText\": \"\"});\n            console.log('is fav');\n          } else {\n            this.setState({isFav: false, \"favText\": \" Favorite\"});\n            console.log('is not fav');\n          }\n        }\n        fetch(`${this.baseURL}/ping`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.updateStatsPush();\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            let APIerror = \"We are currently experiencing some API issues, please try again soon..\";\n            this.setState({\n                error: APIerror,\n                isLoading: false\n            });\n          }\n        )\n    }\n\n\n\n    updateStatsPush() {\n        function millisToMinutesAndSeconds(millis) {\n          var minutes = Math.floor(millis / 60000);\n          var seconds = ((millis % 60000) / 1000).toFixed(0);\n          let timeLeft = {\n            minutes: minutes,\n            seconds: seconds\n          };\n          return timeLeft;\n        }\n        if (localStorage.getItem(`${this.platform}/${this.username}/matches`) != null) {\n          console.log(\"Match Cache Exists\");\n          var cachedStats = JSON.parse(localStorage.getItem(`${this.platform}/${this.username}/matches`));\n          if (Date.now() - cachedStats.timeGrabbed < 600000) {\n            let difference = Date.now() - cachedStats.timeGrabbed;\n            let timeLeft = millisToMinutesAndSeconds(600000 - difference);\n            this.setState({\n              minutesLeft: timeLeft.minutes,\n              secondsLeft: timeLeft.seconds\n            });\n          } else {\n            this.setState({\n              minutesLeft: 10,\n              secondsLeft: 0\n            });\n\n          }\n        }\n        if (localStorage.getItem(`${this.platform}/${this.username}`) != null) {\n          console.log(\"Match Cache Exists\");\n          var cachedStats = JSON.parse(localStorage.getItem(`${this.platform}/${this.username}`));\n          if (Date.now() - cachedStats.timeGrabbed < 600000) {\n            console.log(\"Using cache\");\n            console.log(cachedStats.timeGrabbed);\n            this.setState({\n              stats: cachedStats,\n              error: null,\n              isLoading: false\n            });\n          } else {\n            console.log(\"Fetching new because time\");\n            fetch(`${this.baseURL}/stats/${this.platform}/${this.username}`)\n            .then(res => res.json())\n            .then(\n              (result) => {\n                if (!result.error) {\n                    var stats = {\n                        timeGrabbed: Date.now(),\n                        level: result.data.level,\n                        roles: result.data.roles,\n                        social: result.data.social,\n                        kd: result.data.kd,\n                        wins: result.data.wins,\n                        gamesPlayed: result.data.gamesPlayed,\n                        killsPerGame: result.data.killsPerGame,\n                        weekly: {\n                          kd: result.data.weekly.kd,\n                          kills: result.data.weekly.kills,\n                          killsPerGame: result.data.weekly.killsPerGame\n                        },\n                        ranking: {\n                          kd: {\n                            rank: result.data.ranking.kd.rank,\n                            class: result.data.ranking.kd.class,\n                            percentage: result.data.ranking.kd.percentage\n                          },\n                          wins: {\n                            rank: result.data.ranking.wins.rank,\n                            class: result.data.ranking.wins.class,\n                            percentage: result.data.ranking.wins.percentage\n                          },\n                          killsPerGame: {\n                            rank: result.data.ranking.killsPerGame.rank,\n                            class: result.data.ranking.killsPerGame.class,\n                            percentage: result.data.ranking.killsPerGame.percentage\n                          }\n                        }\n                    }\n                    this.setState({\n                      stats: stats,\n                      error: null,\n                      isLoading: false\n                    });\n                    localStorage.setItem(`${this.platform}/${this.username}`, JSON.stringify(stats));\n                } else {\n                    this.setState({\n                      error: result.msg,\n                      isLoading: false\n                    });\n                }\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              (error) => {\n                this.setState({\n                  error,\n                  isLoading: false\n                });\n                console.log(error);\n              }\n            )\n          }\n        } else {\n          console.log(\"Fetching new because doesn't exist\");\n          fetch(`${this.baseURL}/stats/${this.platform}/${this.username}`)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              if (!result.error) {\n                  var stats = {\n                      timeGrabbed: Date.now(),\n                      level: result.data.level,\n                      kd: result.data.kd,\n                      roles: result.data.roles,\n                      social: result.data.social,\n                      wins: result.data.wins,\n                      gamesPlayed: result.data.gamesPlayed,\n                      killsPerGame: result.data.killsPerGame,\n                      weekly: {\n                        kd: result.data.weekly.kd,\n                        kills: result.data.weekly.kills,\n                        killsPerGame: result.data.weekly.killsPerGame\n                      },\n                      ranking: {\n                        kd: {\n                          rank: result.data.ranking.kd.rank,\n                          class: result.data.ranking.kd.class,\n                          percentage: result.data.ranking.kd.percentage\n                        },\n                        wins: {\n                          rank: result.data.ranking.wins.rank,\n                          class: result.data.ranking.wins.class,\n                          percentage: result.data.ranking.wins.percentage\n                        },\n                        killsPerGame: {\n                          rank: result.data.ranking.killsPerGame.rank,\n                          class: result.data.ranking.killsPerGame.class,\n                          percentage: result.data.ranking.killsPerGame.percentage\n                        }\n                      }\n                  }\n                  this.setState({\n                    stats: stats,\n                    error: null,\n                    isLoading: false\n                  });\n                  localStorage.setItem(`${this.platform}/${this.username}`, JSON.stringify(stats));\n              } else {\n                  this.setState({\n                    error: result.msg,\n                    isLoading: false\n                  });\n              }\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                error,\n                isLoading: false\n              });\n              console.log(error);\n            }\n          )\n        }\n        \n\n        /*fetch(`https://app.warzoneranks.app/stats/${this.platform}/${this.username}/matches`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            if (!result.error) {\n                console.log(result.data);\n                this.setState({\n                  matches: result.data,\n                  error: null,\n                  isLoading: false\n                });\n            } else {\n                this.setState({\n                  error: result.msg,\n                  isLoading: false\n                });\n            }\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              error,\n              isLoading: false\n            });\n            console.log(error);\n          }\n        )*/\n    }\n\n    componentWillMount() {\n        this.setState({\n            platform: this.platform,\n            username: this.username\n        })\n        this.updateStats();\n        this.refreshTimer = setInterval(() => {\n          const { secondsLeft, minutesLeft } = this.state\n          if (secondsLeft > 0) {\n            this.setState(({ secondsLeft }) => ({\n              secondsLeft: secondsLeft - 1\n            }))\n          }\n          if (secondsLeft === 0) {\n            if (minutesLeft === 0) {\n              this.updateStats();\n            } else {\n              this.setState(({ minutesLeft }) => ({\n                minutesLeft: minutesLeft - 1,\n                secondsLeft: 59\n              }))\n            }\n          }\n        }, 1000);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.platform !== this.platform || this.state.username !== this.username ) {\n          this.setState({ \n            platform: this.platform,\n            username: this.username,\n            isLoading: true\n          });\n          this.updateStats();\n        }\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n\n    render() {\n        let makeHomeUser = () => {\n          if (this.state.isHome) {\n            localStorage.removeItem('favoriteUser');\n            this.setState({isHome: false, homeText: \" Mark as my profile\"});\n          } else {\n            let favoriteUser = {\n              username: this.state.username,\n              platform: this.state.platform\n            };\n            localStorage.setItem('favoriteUser', JSON.stringify(favoriteUser));\n            this.setState({isHome: true, homeText: \"\"});\n          \n          }\n        }\n\n        let makeFavoriteUser = () => {\n          let username = this.state.username;\n          let platform = this.state.platform;\n          if (this.state.isFav) {\n            let counter = -1;\n            let index;\n            let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n            let workingArray = cachedUsers.favorites;\n            workingArray.map(function(o) {\n              counter = counter + 1;\n              if (o.username == username && o.platform == platform) {\n                index = counter;\n              } \n            });\n            workingArray.splice(index, 1);\n            if (workingArray.length != 0) {\n              let newJson = {\n                favorites: workingArray\n              }\n              localStorage.setItem(\"favorites\", JSON.stringify(newJson));\n            } else {\n              localStorage.removeItem(\"favorites\");\n            }\n            this.setState({isFav: false, favText: \" Favorite\"});\n          } else {\n            if (localStorage.getItem(\"favorites\") != null) {\n              let cachedUsers = JSON.parse(localStorage.getItem(\"favorites\"));\n              let workingArray = cachedUsers.favorites;\n              let favoriteUser = {\n                username: username,\n                platform: platform\n              };\n              workingArray.push(favoriteUser);\n              let newJson = {\n                favorites: workingArray\n              }\n              localStorage.setItem(\"favorites\", JSON.stringify(newJson));\n            } else {\n              let workingArray = [];\n              let favoriteUser = {\n                username: username,\n                platform: platform\n              };\n              workingArray.push(favoriteUser);\n              let newJson = {\n                favorites: workingArray\n              }\n              localStorage.setItem(\"favorites\", JSON.stringify(newJson));\n            }\n            this.setState({isFav: true, favText: \"\"});\n          }\n        }\n\n        let allActive = \"\";\n        let brActive = \"active\";\n\n        if (this.state.displayOption == true) {\n            allActive = \"active\";\n            brActive = \"\";\n        } else {\n            allActive = \"\";\n            brActive = \"active\";\n        }\n\n        let showAll = () => {\n            if (this.state.displayOption != true) {\n                this.setState({\n                    displayOption: true\n                });\n                allActive = \"active\";\n                brActive = \"\";\n            }\n        }\n\n        let showBR = () => {\n            if (this.state.displayOption != false) {\n                this.setState({\n                    displayOption: false\n                });\n                allActive = \"\";\n                brActive = \"active\";\n            }\n        }\n\n        let userRoles = () => {\n          return  this.state.stats.roles.map((o) => {\n            if (o.roleID != 3) {\n              return (\n                <OverlayTrigger\n                  key={'owner'}\n                  placement={'top'}\n                  overlay={\n                    <Tooltip id={`tooltip-owner`}>\n                      <strong>{o.name}</strong>\n                    </Tooltip>\n                  }\n                >\n                  <div className={`siteRole ${o.class}`}>\n                    <i className={o.className}></i>\n                  </div>\n                </OverlayTrigger>\n              );\n            }\n          });\n        }\n\n        let verification = () => {\n          return  this.state.stats.roles.map((o) => {\n            if (o.roleID == 3) {\n              return (\n                <OverlayTrigger\n                  key={'owner'}\n                  placement={'top'}\n                  overlay={\n                    <Tooltip id={`tooltip-owner`}>\n                      <strong>{o.name}</strong>\n                    </Tooltip>\n                  }\n                >\n                  <div className={`${o.class}`}>\n                    <i className={o.className}></i>\n                  </div>\n                </OverlayTrigger>\n              );\n                }\n          });\n        }\n\n        const { platform, username, error, stats, matches, isLoading, minutesLeft, secondsLeft} = this.state;\n\n\n\n        if (error != null) {\n            return (\n                <DocumentTitle className=\"page\" title=\"Warzone Stats - Stats\">\n                <div className=\"page home\" id=\"page\">\n                    <div className=\"pageError\">\n                      <p>An error has occured..</p>\n                      <p>{error}</p>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        } else if (isLoading) {\n            return (\n                <DocumentTitle className=\"page\" title='Warzone Stats - Home'>\n                <div className=\"page home\" id=\"page\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-8\">\n                                <div className=\"statsDiv \">\n                                    <h1 className=\"sub pad\">Your Matches</h1>\n                                    <FontAwesome \n                                        name='spinner-third'\n                                        spin\n                                        size='2x'\n                                        className=\"m-t-20\"\n                                        style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                                        <div className=\"pageError\">\n                                        <p>Working on pulling your data...</p>\n                                        <p>Load time are longer than normal currently as we rank stats live</p>\n                                        </div>\n                                </div>\n                            </div>\n                            \n                            <div className=\"col-4\">\n                                <div className=\"statsDiv\">\n                                    <h1 className=\"sub pad\">Your Stats</h1>\n                                    <div className=\"statsBox\">\n                                        <div className=\"mainStats\">\n                                            <h1 className=\"username\">{username.replace(\"%23\", \"#\")}</h1>\n                                        </div>\n                                    </div>\n                                    <FontAwesome \n                                            name='spinner-third'\n                                            spin\n                                            size='2x'\n                                            className=\"m-t-20\"\n                                            style={{ color: '#fff', 'marginTop': '15px', 'textAlign': 'center', 'margin': 'auto'}} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        } else {\n            let pageName = `Warzone Stats - Home`;\n            return (\n                <DocumentTitle className=\"page\" title={pageName}>\n                <div className=\"page home\" id=\"page\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-8 col-md-8 col-12\">\n                                <div className=\"statsDiv \">\n                                    <h1 className=\"sub pad\">Your Matches</h1>\n                                    \n                                    <Matches displayAlt={this.state.displayOption} platform={platform} username={username}></Matches>\n                                </div>\n                            </div>\n                            \n                            <div className=\"col-lg-4 col-md-4 col-12\">\n                                <div className=\"statsDiv\">\n                                    <h1 className=\"sub pad\">Your Stats</h1>\n                                    <div className=\"statsBox first\">\n                                        <div className=\"mainStats\">\n                                            <h1 className=\"username\">{userRoles()} {username.replace(\"%23\", \"#\")} {verification()}</h1>\n                                            <div className=\"userOptions\">\n                                                <span onClick={makeHomeUser} className={`makeHomeB fav-${this.state.isHome}`}><i className=\"fal fa-home\"></i>{this.state.homeText}</span>\n                                                <span onClick={makeFavoriteUser} className={`makeFav favo-${this.state.isFav}`}><i className=\"far fa-star\"></i>{this.state.favText}</span>\n                                            </div>\n                                            <div className=\"refreshTimer\">\n                                                <p><i className=\"far fa-clock\"></i> {minutesLeft}:{ secondsLeft < 10 ? `0${ secondsLeft }` : secondsLeft }</p>\n                                            </div>\n                                            <div className=\"matchOptions\">\n                                              <div onClick={showAll} className={`matchOption ${allActive}`}>All</div>\n                                              <div onClick={showBR} className={`matchOption ${brActive}`}>Just BR</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"statsBox\">\n                                        <h1 className=\"statsTitle\">\n                                            Lifetime\n                                        </h1>\n                                        <div className=\"rankedStat\">\n                                            <h1>K/D</h1>\n                                            <p>{stats.kd}</p>\n                                            <p className={`ranking ${stats.ranking.kd.class}`}>{stats.ranking.kd.rank} - {stats.ranking.kd.percentage}</p>\n                                        </div>\n                                        <div className=\"rankedStat\">\n                                            <h1>Wins</h1>\n                                            <p>{stats.wins}</p>\n                                            <p className={`ranking ${stats.ranking.wins.class}`}>{stats.ranking.wins.rank} - {stats.ranking.wins.percentage}</p>\n                                        </div>\n                                        <div className=\"rankedStat\">\n                                            <h1>Kills/Game</h1>\n                                            <p>{stats.killsPerGame}</p>\n                                            <p className={`ranking ${stats.ranking.killsPerGame.class}`}>{stats.ranking.killsPerGame.rank} - {stats.ranking.killsPerGame.percentage}</p>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"statsBox\">\n                                        <h1 className=\"statsTitle\">\n                                            Weekly\n                                        </h1>\n                                        <div className=\"rankedStat\">\n                                            <h1>K/D</h1>\n                                            <p><span>{stats.weekly.kd}{stats.weekly.kd > stats.kd && <FontAwesome \n                          name='long-arrow-up'\n                          style={{ color: '#27ae60', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}{stats.weekly.kd < stats.kd && <FontAwesome \n                            name='long-arrow-down'\n                            style={{ color: '#c0392b', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}</span></p>\n                                        </div>\n                                        <div className=\"rankedStat\">\n                                            <h1>Kills</h1>\n                                            <p>{stats.weekly.kills}</p>\n                                        </div>\n                                        <div className=\"rankedStat\">\n                                            <h1>Kills/Game</h1>\n                                            <p><span>{stats.weekly.killsPerGame}{stats.weekly.killsPerGame > stats.killsPerGame && <FontAwesome \n                          name='long-arrow-up'\n                          style={{ color: '#27ae60', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}{stats.weekly.killsPerGame < stats.killsPerGame && <FontAwesome \n                            name='long-arrow-down'\n                            style={{ color: '#c0392b', 'fontSize': '21px', 'paddingLeft': '3px', 'paddingRight': '3px'}} />}</span></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        \n                        </div>\n                    </div>\n                </div>\n                </DocumentTitle>\n            );\n        }\n    };\n}\n\nexport default NewHome;",["390","391"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/About.js",["392","393","394","395","396","397","398"],"/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Recent.js",["399","400","401","402","403","404"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\n\nimport {\n    Link,\n    Redirect\n} from 'react-router-dom';\n\n\nclass Recent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          platform: '',\n          recent: null,\n          redirect: null\n        };\n    }\n\n    getRecents = () => {\n        if (localStorage.getItem(\"recent\") != null) {\n            let cachedUsers = JSON.parse(localStorage.getItem(\"recent\"));\n            this.setState({\n                recent: cachedUsers.recent\n            });\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            username: '',\n            platform: 'xbl',\n            favorites: null,\n            redirect: null\n        });\n        this.getRecents();\n        console.log(this.props);\n        setInterval(this.getRecents, 1000);\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    redirectToPage() {\n        console.log(`/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}`);\n        this.setState({ redirect: `/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}` });\n    }\n\n    setUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    } \n\n    setPlatform(e) {\n        this.setState({\n            platform: e.target.value\n        });\n    } \n\n    renderFavorites() {\n        function getPlatformIcon(platform) {\n            switch(platform) {\n                case \"xbl\": \n                    return \"xbox\";\n                    break;\n                case \"psn\": \n                    return \"playstation\";\n                    break;\n                case \"battle\": \n                    return \"battle-net\";\n                    break;\n            }\n        }\n\n        \n\n        if (this.state.recent != null) {\n            return  this.state.recent.map(function(o) {\n                return (\n                    <Link key={`${o.platform}/${o.username}`}  to={`/stats/${o.platform}/${o.username}`}>\n                        <div className=\"favorite\">\n                            <p><i className={`fab fa-${getPlatformIcon(o.platform)}`}></i> {o.username.replace(\"%23\", \"#\")}</p>\n                        </div>\n                    </Link>\n                )\n            });\n        } else {\n            return (\n                <div>\n                     \n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        if (this.state.redirect !== null) {\n            return <Redirect to={this.state.redirect} />\n        }\n        let title = \"Favorites\";\n        if (this.props.fromPage != null) {\n            title = this.props.fromPage;\n        }\n        return (\n            <div className=\"page home\" id=\"page\">\n                <h1 className=\"pageTitle aboutPageTitle\">Recent Users</h1>\n                <div className=\"favorites\">\n                    {this.renderFavorites()}\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default Recent;","/Users/parkersmith/Desktop/Desktop - Parker’s MacBook Pro/ReactActivisio/FrontEndWorking/src/pages/Social.js",["405","406","407","408","409"],"import React, { Component } from 'react';\n\nimport DocumentTitle from 'react-document-title';\n\n\nimport {\n    Link,\n    Redirect\n} from 'react-router-dom';\n\n\nclass Social extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          platform: '',\n          recent: null,\n          redirect: null\n        };\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            username: '',\n            platform: 'xbl',\n            favorites: null,\n            redirect: null\n        });\n    }\n\n    componentWillUnmount() {\n    \n    }\n\n    redirectToPage() {\n        console.log(`/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}`);\n        this.setState({ redirect: `/stats/${this.state.platform}/${this.state.username.replace(\"#\", \"%23\")}` });\n    }\n\n    setUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    } \n\n    setPlatform(e) {\n        this.setState({\n            platform: e.target.value\n        });\n    } \n\n\n    render() {\n        if (this.state.redirect !== null) {\n            return <Redirect to={this.state.redirect} />\n        }\n        let title = \"Favorites\";\n        if (this.props.fromPage != null) {\n            title = this.props.fromPage;\n        }\n        return (\n            <div className=\"page home\" id=\"page\">\n                <h1 className=\"pageTitle aboutPageTitle\">Social</h1>\n                <div className=\"favorites\">\n                    <a target=\"_blank\" href=\"https://discord.gg/A3d8kYpQ24\">\n                        <div className=\"favorite\">\n                            <p><i className={`fab fa-discord`}></i> Join our discord</p>\n                        </div>\n                    </a>\n                    <a target=\"_blank\" href=\"https://twitter.com/WZRanks\">\n                        <div className=\"favorite\">\n                            <p><i className={`fab fa-twitter`}></i> Follow our twitter</p>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default Social;",{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"414","line":7,"column":8,"nodeType":"412","messageId":"413","endLine":7,"endColumn":13},{"ruleId":"410","severity":1,"message":"415","line":11,"column":5,"nodeType":"412","messageId":"413","endLine":11,"endColumn":9},{"ruleId":"416","replacedBy":"417"},{"ruleId":"418","replacedBy":"419"},{"ruleId":"410","severity":1,"message":"420","line":4,"column":10,"nodeType":"412","messageId":"413","endLine":4,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":4,"column":21,"nodeType":"412","messageId":"413","endLine":4,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":4,"column":26,"nodeType":"412","messageId":"413","endLine":4,"endColumn":29},{"ruleId":"410","severity":1,"message":"422","line":5,"column":8,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"423","severity":1,"message":"424","line":13,"column":62,"nodeType":"425","endLine":13,"endColumn":83},{"ruleId":"426","severity":1,"message":"427","line":24,"column":86,"nodeType":"428","endLine":24,"endColumn":101},{"ruleId":"426","severity":1,"message":"427","line":25,"column":77,"nodeType":"428","endLine":25,"endColumn":92},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"415","line":10,"column":5,"nodeType":"412","messageId":"413","endLine":10,"endColumn":9},{"ruleId":"430","severity":1,"message":"431","line":47,"column":48,"nodeType":"432","messageId":"433","endLine":47,"endColumn":50},{"ruleId":"430","severity":1,"message":"431","line":47,"column":107,"nodeType":"432","messageId":"433","endLine":47,"endColumn":109},{"ruleId":"434","severity":1,"message":"435","line":62,"column":37,"nodeType":"436","messageId":"437","endLine":62,"endColumn":45},{"ruleId":"430","severity":1,"message":"431","line":64,"column":28,"nodeType":"432","messageId":"433","endLine":64,"endColumn":30},{"ruleId":"430","severity":1,"message":"431","line":64,"column":54,"nodeType":"432","messageId":"433","endLine":64,"endColumn":56},{"ruleId":"438","severity":1,"message":"439","line":127,"column":15,"nodeType":"412","messageId":"440","endLine":127,"endColumn":26},{"ruleId":"434","severity":1,"message":"435","line":359,"column":30,"nodeType":"436","messageId":"437","endLine":359,"endColumn":38},{"ruleId":"430","severity":1,"message":"431","line":361,"column":30,"nodeType":"432","messageId":"433","endLine":361,"endColumn":32},{"ruleId":"430","severity":1,"message":"431","line":361,"column":56,"nodeType":"432","messageId":"433","endLine":361,"endColumn":58},{"ruleId":"430","severity":1,"message":"441","line":366,"column":37,"nodeType":"432","messageId":"433","endLine":366,"endColumn":39},{"ruleId":"410","severity":1,"message":"442","line":403,"column":51,"nodeType":"412","messageId":"413","endLine":403,"endColumn":58},{"ruleId":"416","replacedBy":"443"},{"ruleId":"418","replacedBy":"444"},{"ruleId":"410","severity":1,"message":"420","line":4,"column":10,"nodeType":"412","messageId":"413","endLine":4,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":4,"column":21,"nodeType":"412","messageId":"413","endLine":4,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":4,"column":26,"nodeType":"412","messageId":"413","endLine":4,"endColumn":29},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"415","line":8,"column":5,"nodeType":"412","messageId":"413","endLine":8,"endColumn":9},{"ruleId":"416","replacedBy":"445"},{"ruleId":"418","replacedBy":"446"},{"ruleId":"430","severity":1,"message":"431","line":191,"column":43,"nodeType":"432","messageId":"433","endLine":191,"endColumn":45},{"ruleId":"430","severity":1,"message":"431","line":198,"column":27,"nodeType":"432","messageId":"433","endLine":198,"endColumn":29},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"415","line":9,"column":5,"nodeType":"412","messageId":"413","endLine":9,"endColumn":9},{"ruleId":"423","severity":1,"message":"424","line":29,"column":21,"nodeType":"425","endLine":29,"endColumn":45},{"ruleId":"426","severity":1,"message":"427","line":36,"column":596,"nodeType":"428","endLine":36,"endColumn":611},{"ruleId":"416","replacedBy":"447"},{"ruleId":"418","replacedBy":"448"},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"415","line":9,"column":5,"nodeType":"412","messageId":"413","endLine":9,"endColumn":9},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"449","line":5,"column":39,"nodeType":"412","messageId":"413","endLine":5,"endColumn":43},{"ruleId":"410","severity":1,"message":"414","line":7,"column":8,"nodeType":"412","messageId":"413","endLine":7,"endColumn":13},{"ruleId":"450","severity":1,"message":"451","line":68,"column":13,"nodeType":"452","messageId":"453","endLine":78,"endColumn":14},{"ruleId":"454","severity":1,"message":"455","line":71,"column":21,"nodeType":"456","messageId":"457","endLine":71,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":74,"column":21,"nodeType":"456","messageId":"457","endLine":74,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":77,"column":21,"nodeType":"456","messageId":"457","endLine":77,"endColumn":27},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"415","line":9,"column":5,"nodeType":"412","messageId":"413","endLine":9,"endColumn":9},{"ruleId":"430","severity":1,"message":"431","line":129,"column":27,"nodeType":"432","messageId":"433","endLine":129,"endColumn":29},{"ruleId":"434","severity":1,"message":"458","line":137,"column":53,"nodeType":"436","messageId":"459","endLine":137,"endColumn":61},{"ruleId":"430","severity":1,"message":"431","line":138,"column":44,"nodeType":"432","messageId":"433","endLine":138,"endColumn":46},{"ruleId":"430","severity":1,"message":"431","line":177,"column":27,"nodeType":"432","messageId":"433","endLine":177,"endColumn":29},{"ruleId":"430","severity":1,"message":"431","line":223,"column":38,"nodeType":"432","messageId":"433","endLine":223,"endColumn":40},{"ruleId":"410","severity":1,"message":"460","line":270,"column":17,"nodeType":"412","messageId":"413","endLine":270,"endColumn":24},{"ruleId":"430","severity":1,"message":"431","line":313,"column":38,"nodeType":"432","messageId":"433","endLine":313,"endColumn":40},{"ruleId":"430","severity":1,"message":"441","line":322,"column":42,"nodeType":"432","messageId":"433","endLine":322,"endColumn":44},{"ruleId":"430","severity":1,"message":"441","line":332,"column":42,"nodeType":"432","messageId":"433","endLine":332,"endColumn":44},{"ruleId":"450","severity":1,"message":"451","line":342,"column":13,"nodeType":"452","messageId":"453","endLine":364,"endColumn":14},{"ruleId":"454","severity":1,"message":"455","line":345,"column":21,"nodeType":"456","messageId":"457","endLine":345,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":348,"column":21,"nodeType":"456","messageId":"457","endLine":348,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":351,"column":21,"nodeType":"456","messageId":"457","endLine":351,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":354,"column":21,"nodeType":"456","messageId":"457","endLine":354,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":357,"column":21,"nodeType":"456","messageId":"457","endLine":357,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":360,"column":21,"nodeType":"456","messageId":"457","endLine":360,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":363,"column":21,"nodeType":"456","messageId":"457","endLine":363,"endColumn":27},{"ruleId":"430","severity":1,"message":"431","line":372,"column":43,"nodeType":"432","messageId":"433","endLine":372,"endColumn":45},{"ruleId":"410","severity":1,"message":"461","line":378,"column":13,"nodeType":"412","messageId":"413","endLine":378,"endColumn":18},{"ruleId":"430","severity":1,"message":"431","line":379,"column":27,"nodeType":"432","messageId":"433","endLine":379,"endColumn":29},{"ruleId":"410","severity":1,"message":"462","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"420","line":6,"column":10,"nodeType":"412","messageId":"413","endLine":6,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":6,"column":21,"nodeType":"412","messageId":"413","endLine":6,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":6,"column":26,"nodeType":"412","messageId":"413","endLine":6,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":6,"column":31,"nodeType":"412","messageId":"413","endLine":6,"endColumn":37},{"ruleId":"410","severity":1,"message":"463","line":7,"column":8,"nodeType":"412","messageId":"413","endLine":7,"endColumn":20},{"ruleId":"450","severity":1,"message":"451","line":93,"column":13,"nodeType":"452","messageId":"453","endLine":103,"endColumn":14},{"ruleId":"454","severity":1,"message":"455","line":96,"column":21,"nodeType":"456","messageId":"457","endLine":96,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":99,"column":21,"nodeType":"456","messageId":"457","endLine":99,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":102,"column":21,"nodeType":"456","messageId":"457","endLine":102,"endColumn":27},{"ruleId":"423","severity":1,"message":"424","line":109,"column":21,"nodeType":"425","endLine":109,"endColumn":42},{"ruleId":"426","severity":1,"message":"427","line":113,"column":28,"nodeType":"428","endLine":113,"endColumn":43},{"ruleId":"426","severity":1,"message":"427","line":114,"column":28,"nodeType":"428","endLine":114,"endColumn":43},{"ruleId":"416","replacedBy":"464"},{"ruleId":"418","replacedBy":"465"},{"ruleId":"410","severity":1,"message":"420","line":4,"column":10,"nodeType":"412","messageId":"413","endLine":4,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":4,"column":21,"nodeType":"412","messageId":"413","endLine":4,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":4,"column":26,"nodeType":"412","messageId":"413","endLine":4,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":4,"column":63,"nodeType":"412","messageId":"413","endLine":4,"endColumn":69},{"ruleId":"410","severity":1,"message":"422","line":5,"column":8,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"466","line":9,"column":8,"nodeType":"412","messageId":"413","endLine":9,"endColumn":22},{"ruleId":"450","severity":1,"message":"451","line":108,"column":13,"nodeType":"452","messageId":"453","endLine":118,"endColumn":14},{"ruleId":"454","severity":1,"message":"455","line":111,"column":21,"nodeType":"456","messageId":"457","endLine":111,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":114,"column":21,"nodeType":"456","messageId":"457","endLine":114,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":117,"column":21,"nodeType":"456","messageId":"457","endLine":117,"endColumn":27},{"ruleId":"423","severity":1,"message":"424","line":152,"column":62,"nodeType":"425","endLine":152,"endColumn":83},{"ruleId":"426","severity":1,"message":"427","line":163,"column":86,"nodeType":"428","endLine":163,"endColumn":101},{"ruleId":"426","severity":1,"message":"427","line":164,"column":77,"nodeType":"428","endLine":164,"endColumn":92},{"ruleId":"423","severity":1,"message":"424","line":178,"column":66,"nodeType":"425","endLine":178,"endColumn":87},{"ruleId":"416","replacedBy":"467"},{"ruleId":"418","replacedBy":"468"},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"415","line":9,"column":5,"nodeType":"412","messageId":"413","endLine":9,"endColumn":9},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"415","line":8,"column":5,"nodeType":"412","messageId":"413","endLine":8,"endColumn":9},{"ruleId":"410","severity":1,"message":"462","line":1,"column":17,"nodeType":"412","messageId":"413","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"420","line":6,"column":10,"nodeType":"412","messageId":"413","endLine":6,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":6,"column":21,"nodeType":"412","messageId":"413","endLine":6,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":6,"column":26,"nodeType":"412","messageId":"413","endLine":6,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":6,"column":31,"nodeType":"412","messageId":"413","endLine":6,"endColumn":37},{"ruleId":"410","severity":1,"message":"463","line":7,"column":8,"nodeType":"412","messageId":"413","endLine":7,"endColumn":20},{"ruleId":"450","severity":1,"message":"451","line":93,"column":13,"nodeType":"452","messageId":"453","endLine":103,"endColumn":14},{"ruleId":"454","severity":1,"message":"455","line":96,"column":21,"nodeType":"456","messageId":"457","endLine":96,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":99,"column":21,"nodeType":"456","messageId":"457","endLine":99,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":102,"column":21,"nodeType":"456","messageId":"457","endLine":102,"endColumn":27},{"ruleId":"423","severity":1,"message":"424","line":109,"column":21,"nodeType":"425","endLine":109,"endColumn":42},{"ruleId":"426","severity":1,"message":"427","line":113,"column":28,"nodeType":"428","endLine":113,"endColumn":43},{"ruleId":"426","severity":1,"message":"427","line":114,"column":28,"nodeType":"428","endLine":114,"endColumn":43},{"ruleId":"430","severity":1,"message":"431","line":24,"column":34,"nodeType":"432","messageId":"433","endLine":24,"endColumn":36},{"ruleId":"430","severity":1,"message":"431","line":206,"column":43,"nodeType":"432","messageId":"433","endLine":206,"endColumn":45},{"ruleId":"430","severity":1,"message":"431","line":213,"column":27,"nodeType":"432","messageId":"433","endLine":213,"endColumn":29},{"ruleId":"454","severity":1,"message":"455","line":71,"column":21,"nodeType":"456","messageId":"457","endLine":71,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":74,"column":21,"nodeType":"456","messageId":"457","endLine":74,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":77,"column":21,"nodeType":"456","messageId":"457","endLine":77,"endColumn":27},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"449","line":5,"column":39,"nodeType":"412","messageId":"413","endLine":5,"endColumn":43},{"ruleId":"410","severity":1,"message":"414","line":7,"column":8,"nodeType":"412","messageId":"413","endLine":7,"endColumn":13},{"ruleId":"410","severity":1,"message":"469","line":8,"column":8,"nodeType":"412","messageId":"413","endLine":8,"endColumn":17},{"ruleId":"410","severity":1,"message":"415","line":12,"column":5,"nodeType":"412","messageId":"413","endLine":12,"endColumn":9},{"ruleId":"410","severity":1,"message":"470","line":13,"column":5,"nodeType":"412","messageId":"413","endLine":13,"endColumn":13},{"ruleId":"416","replacedBy":"471"},{"ruleId":"418","replacedBy":"472"},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"415","line":9,"column":5,"nodeType":"412","messageId":"413","endLine":9,"endColumn":9},{"ruleId":"430","severity":1,"message":"431","line":28,"column":34,"nodeType":"432","messageId":"433","endLine":28,"endColumn":36},{"ruleId":"430","severity":1,"message":"431","line":137,"column":27,"nodeType":"432","messageId":"433","endLine":137,"endColumn":29},{"ruleId":"434","severity":1,"message":"458","line":145,"column":53,"nodeType":"436","messageId":"459","endLine":145,"endColumn":61},{"ruleId":"430","severity":1,"message":"431","line":146,"column":44,"nodeType":"432","messageId":"433","endLine":146,"endColumn":46},{"ruleId":"430","severity":1,"message":"431","line":185,"column":27,"nodeType":"432","messageId":"433","endLine":185,"endColumn":29},{"ruleId":"430","severity":1,"message":"431","line":231,"column":38,"nodeType":"432","messageId":"433","endLine":231,"endColumn":40},{"ruleId":"410","severity":1,"message":"460","line":278,"column":17,"nodeType":"412","messageId":"413","endLine":278,"endColumn":24},{"ruleId":"430","severity":1,"message":"431","line":321,"column":38,"nodeType":"432","messageId":"433","endLine":321,"endColumn":40},{"ruleId":"430","severity":1,"message":"441","line":330,"column":42,"nodeType":"432","messageId":"433","endLine":330,"endColumn":44},{"ruleId":"430","severity":1,"message":"441","line":340,"column":42,"nodeType":"432","messageId":"433","endLine":340,"endColumn":44},{"ruleId":"450","severity":1,"message":"451","line":350,"column":13,"nodeType":"452","messageId":"453","endLine":372,"endColumn":14},{"ruleId":"454","severity":1,"message":"455","line":353,"column":21,"nodeType":"456","messageId":"457","endLine":353,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":356,"column":21,"nodeType":"456","messageId":"457","endLine":356,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":359,"column":21,"nodeType":"456","messageId":"457","endLine":359,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":362,"column":21,"nodeType":"456","messageId":"457","endLine":362,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":365,"column":21,"nodeType":"456","messageId":"457","endLine":365,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":368,"column":21,"nodeType":"456","messageId":"457","endLine":368,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":371,"column":21,"nodeType":"456","messageId":"457","endLine":371,"endColumn":27},{"ruleId":"430","severity":1,"message":"431","line":380,"column":43,"nodeType":"432","messageId":"433","endLine":380,"endColumn":45},{"ruleId":"410","severity":1,"message":"461","line":386,"column":13,"nodeType":"412","messageId":"413","endLine":386,"endColumn":18},{"ruleId":"430","severity":1,"message":"431","line":387,"column":27,"nodeType":"432","messageId":"433","endLine":387,"endColumn":29},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"415","line":11,"column":5,"nodeType":"412","messageId":"413","endLine":11,"endColumn":9},{"ruleId":"430","severity":1,"message":"431","line":47,"column":34,"nodeType":"432","messageId":"433","endLine":47,"endColumn":36},{"ruleId":"430","severity":1,"message":"431","line":57,"column":48,"nodeType":"432","messageId":"433","endLine":57,"endColumn":50},{"ruleId":"430","severity":1,"message":"431","line":57,"column":107,"nodeType":"432","messageId":"433","endLine":57,"endColumn":109},{"ruleId":"434","severity":1,"message":"435","line":74,"column":27,"nodeType":"436","messageId":"437","endLine":74,"endColumn":36},{"ruleId":"430","severity":1,"message":"431","line":76,"column":28,"nodeType":"432","messageId":"433","endLine":76,"endColumn":30},{"ruleId":"430","severity":1,"message":"431","line":76,"column":54,"nodeType":"432","messageId":"433","endLine":76,"endColumn":56},{"ruleId":"430","severity":1,"message":"431","line":93,"column":36,"nodeType":"432","messageId":"433","endLine":93,"endColumn":38},{"ruleId":"434","severity":1,"message":"435","line":132,"column":29,"nodeType":"436","messageId":"437","endLine":132,"endColumn":38},{"ruleId":"430","severity":1,"message":"431","line":134,"column":28,"nodeType":"432","messageId":"433","endLine":134,"endColumn":30},{"ruleId":"430","severity":1,"message":"431","line":134,"column":54,"nodeType":"432","messageId":"433","endLine":134,"endColumn":56},{"ruleId":"430","severity":1,"message":"431","line":151,"column":38,"nodeType":"432","messageId":"433","endLine":151,"endColumn":40},{"ruleId":"434","severity":1,"message":"435","line":188,"column":37,"nodeType":"436","messageId":"437","endLine":188,"endColumn":45},{"ruleId":"430","severity":1,"message":"431","line":190,"column":28,"nodeType":"432","messageId":"433","endLine":190,"endColumn":30},{"ruleId":"430","severity":1,"message":"431","line":190,"column":54,"nodeType":"432","messageId":"433","endLine":190,"endColumn":56},{"ruleId":"438","severity":1,"message":"439","line":253,"column":15,"nodeType":"412","messageId":"440","endLine":253,"endColumn":26},{"ruleId":"434","severity":1,"message":"435","line":491,"column":30,"nodeType":"436","messageId":"437","endLine":491,"endColumn":38},{"ruleId":"430","severity":1,"message":"431","line":493,"column":30,"nodeType":"432","messageId":"433","endLine":493,"endColumn":32},{"ruleId":"430","severity":1,"message":"431","line":493,"column":56,"nodeType":"432","messageId":"433","endLine":493,"endColumn":58},{"ruleId":"430","severity":1,"message":"441","line":498,"column":37,"nodeType":"432","messageId":"433","endLine":498,"endColumn":39},{"ruleId":"430","severity":1,"message":"431","line":541,"column":38,"nodeType":"432","messageId":"433","endLine":541,"endColumn":40},{"ruleId":"430","severity":1,"message":"441","line":550,"column":42,"nodeType":"432","messageId":"433","endLine":550,"endColumn":44},{"ruleId":"430","severity":1,"message":"441","line":560,"column":42,"nodeType":"432","messageId":"433","endLine":560,"endColumn":44},{"ruleId":"434","severity":1,"message":"473","line":570,"column":50,"nodeType":"474","messageId":"459","endLine":570,"endColumn":52},{"ruleId":"430","severity":1,"message":"441","line":571,"column":26,"nodeType":"432","messageId":"433","endLine":571,"endColumn":28},{"ruleId":"434","severity":1,"message":"473","line":592,"column":50,"nodeType":"474","messageId":"459","endLine":592,"endColumn":52},{"ruleId":"430","severity":1,"message":"431","line":593,"column":26,"nodeType":"432","messageId":"433","endLine":593,"endColumn":28},{"ruleId":"434","severity":1,"message":"473","line":614,"column":51,"nodeType":"474","messageId":"459","endLine":614,"endColumn":53},{"ruleId":"430","severity":1,"message":"431","line":615,"column":26,"nodeType":"432","messageId":"433","endLine":615,"endColumn":28},{"ruleId":"426","severity":1,"message":"427","line":617,"column":48,"nodeType":"428","endLine":617,"endColumn":63},{"ruleId":"430","severity":1,"message":"431","line":622,"column":26,"nodeType":"432","messageId":"433","endLine":622,"endColumn":28},{"ruleId":"426","severity":1,"message":"427","line":624,"column":49,"nodeType":"428","endLine":624,"endColumn":64},{"ruleId":"410","severity":1,"message":"442","line":632,"column":51,"nodeType":"412","messageId":"413","endLine":632,"endColumn":58},{"ruleId":"410","severity":1,"message":"420","line":4,"column":10,"nodeType":"412","messageId":"413","endLine":4,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":4,"column":21,"nodeType":"412","messageId":"413","endLine":4,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":4,"column":26,"nodeType":"412","messageId":"413","endLine":4,"endColumn":29},{"ruleId":"410","severity":1,"message":"475","line":5,"column":8,"nodeType":"412","messageId":"413","endLine":5,"endColumn":13},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"415","line":10,"column":5,"nodeType":"412","messageId":"413","endLine":10,"endColumn":9},{"ruleId":"430","severity":1,"message":"431","line":59,"column":34,"nodeType":"432","messageId":"433","endLine":59,"endColumn":36},{"ruleId":"430","severity":1,"message":"431","line":69,"column":29,"nodeType":"432","messageId":"433","endLine":69,"endColumn":31},{"ruleId":"430","severity":1,"message":"431","line":69,"column":69,"nodeType":"432","messageId":"433","endLine":69,"endColumn":71},{"ruleId":"434","severity":1,"message":"435","line":84,"column":37,"nodeType":"436","messageId":"437","endLine":84,"endColumn":45},{"ruleId":"430","severity":1,"message":"431","line":86,"column":28,"nodeType":"432","messageId":"433","endLine":86,"endColumn":30},{"ruleId":"430","severity":1,"message":"431","line":86,"column":54,"nodeType":"432","messageId":"433","endLine":86,"endColumn":56},{"ruleId":"438","severity":1,"message":"439","line":149,"column":15,"nodeType":"412","messageId":"440","endLine":149,"endColumn":26},{"ruleId":"434","severity":1,"message":"435","line":385,"column":30,"nodeType":"436","messageId":"437","endLine":385,"endColumn":38},{"ruleId":"430","severity":1,"message":"431","line":387,"column":30,"nodeType":"432","messageId":"433","endLine":387,"endColumn":32},{"ruleId":"430","severity":1,"message":"431","line":387,"column":56,"nodeType":"432","messageId":"433","endLine":387,"endColumn":58},{"ruleId":"430","severity":1,"message":"441","line":392,"column":37,"nodeType":"432","messageId":"433","endLine":392,"endColumn":39},{"ruleId":"430","severity":1,"message":"431","line":433,"column":38,"nodeType":"432","messageId":"433","endLine":433,"endColumn":40},{"ruleId":"430","severity":1,"message":"441","line":442,"column":42,"nodeType":"432","messageId":"433","endLine":442,"endColumn":44},{"ruleId":"430","severity":1,"message":"441","line":452,"column":42,"nodeType":"432","messageId":"433","endLine":452,"endColumn":44},{"ruleId":"434","severity":1,"message":"473","line":462,"column":50,"nodeType":"474","messageId":"459","endLine":462,"endColumn":52},{"ruleId":"430","severity":1,"message":"441","line":463,"column":26,"nodeType":"432","messageId":"433","endLine":463,"endColumn":28},{"ruleId":"434","severity":1,"message":"473","line":484,"column":50,"nodeType":"474","messageId":"459","endLine":484,"endColumn":52},{"ruleId":"430","severity":1,"message":"431","line":485,"column":26,"nodeType":"432","messageId":"433","endLine":485,"endColumn":28},{"ruleId":"410","severity":1,"message":"442","line":505,"column":51,"nodeType":"412","messageId":"413","endLine":505,"endColumn":58},{"ruleId":"416","replacedBy":"476"},{"ruleId":"418","replacedBy":"477"},{"ruleId":"410","severity":1,"message":"420","line":5,"column":10,"nodeType":"412","messageId":"413","endLine":5,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":5,"column":21,"nodeType":"412","messageId":"413","endLine":5,"endColumn":24},{"ruleId":"410","severity":1,"message":"421","line":5,"column":26,"nodeType":"412","messageId":"413","endLine":5,"endColumn":29},{"ruleId":"410","severity":1,"message":"429","line":5,"column":31,"nodeType":"412","messageId":"413","endLine":5,"endColumn":37},{"ruleId":"410","severity":1,"message":"415","line":9,"column":5,"nodeType":"412","messageId":"413","endLine":9,"endColumn":9},{"ruleId":"423","severity":1,"message":"424","line":29,"column":21,"nodeType":"425","endLine":29,"endColumn":45},{"ruleId":"426","severity":1,"message":"427","line":36,"column":596,"nodeType":"428","endLine":36,"endColumn":611},{"ruleId":"410","severity":1,"message":"478","line":3,"column":8,"nodeType":"412","messageId":"413","endLine":3,"endColumn":21},{"ruleId":"450","severity":1,"message":"451","line":69,"column":13,"nodeType":"452","messageId":"453","endLine":79,"endColumn":14},{"ruleId":"454","severity":1,"message":"455","line":72,"column":21,"nodeType":"456","messageId":"457","endLine":72,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":75,"column":21,"nodeType":"456","messageId":"457","endLine":75,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":78,"column":21,"nodeType":"456","messageId":"457","endLine":78,"endColumn":27},{"ruleId":"410","severity":1,"message":"479","line":110,"column":13,"nodeType":"412","messageId":"413","endLine":110,"endColumn":18},{"ruleId":"410","severity":1,"message":"478","line":3,"column":8,"nodeType":"412","messageId":"413","endLine":3,"endColumn":21},{"ruleId":"410","severity":1,"message":"415","line":7,"column":5,"nodeType":"412","messageId":"413","endLine":7,"endColumn":9},{"ruleId":"410","severity":1,"message":"479","line":62,"column":13,"nodeType":"412","messageId":"413","endLine":62,"endColumn":18},{"ruleId":"426","severity":1,"message":"427","line":68,"column":24,"nodeType":"428","endLine":68,"endColumn":39},{"ruleId":"426","severity":1,"message":"427","line":73,"column":24,"nodeType":"428","endLine":73,"endColumn":39},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Stats' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["480"],"no-negated-in-lhs",["481"],"'Container' is defined but never used.","'Col' is defined but never used.","'FontAwesome' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","no-redeclare","'cachedStats' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'matches' is assigned a value but never used.",["480"],["481"],["480"],["481"],["480"],["481"],"'Form' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","Array.prototype.map() expects a value to be returned at the end of function.","expectedAtEnd","'matchID' is assigned a value but never used.","'isWin' is assigned a value but never used.","'Component' is defined but never used.","'BigWhiteLogo' is defined but never used.",["480"],["481"],"'NavbarCollapse' is defined but never used.",["480"],["481"],"'Favorites' is defined but never used.","'Redirect' is defined but never used.",["480"],["481"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","'toast' is defined but never used.",["480"],["481"],"'DocumentTitle' is defined but never used.","'title' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]